from scipy.integrate import odeint
import numpy as np
import matplotlib
matplotlib.use('agg')	#run without an X-server
import matplotlib.pyplot as plt
from timeit import default_timer as timer
import pandas as pd
import sys
import os
import pickle
from tqdm import tqdm
sys.dont_write_bytecode = True

folder = os.path.dirname(os.path.abspath(__file__)) + '/'

t = np.linspace(0, 3.0, 101)
points = len(t)
solver_steps = 0
states = ['I', 'S']

x = dict()
dt_x = dict()

sorted_keys = [('I', '(0, (0.0, 9.0))'), ('I', '(0, (9.0, 0.0))'), ('I', '(1, (0.0, 9.0))'), ('I', '(1, (4.0, 5.0))'), ('I', '(1, (9.0, 0.0))'), ('I', '(2, (0.0, 9.0))'), ('I', '(2, (3.0, 6.0))'), ('I', '(2, (6.0, 3.0))'), ('I', '(2, (9.0, 0.0))'), ('I', '(3, (0.0, 9.0))'), ('I', '(3, (2.0, 7.0))'), ('I', '(3, (4.0, 5.0))'), ('I', '(3, (7.0, 2.0))'), ('I', '(3, (9.0, 0.0))'), ('I', '(4, (0.0, 9.0))'), ('I', '(4, (1.0, 8.0))'), ('I', '(4, (3.0, 6.0))'), ('I', '(4, (4.0, 5.0))'), ('I', '(4, (5.0, 4.0))'), ('I', '(4, (6.0, 3.0))'), ('I', '(4, (7.0, 2.0))'), ('I', '(4, (8.0, 1.0))'), ('I', '(4, (9.0, 0.0))'), ('I', '(5, (0.0, 9.0))'), ('I', '(5, (1.0, 8.0))'), ('I', '(5, (2.0, 7.0))'), ('I', '(5, (3.0, 6.0))'), ('I', '(5, (4.0, 5.0))'), ('I', '(5, (5.0, 4.0))'), ('I', '(5, (6.0, 3.0))'), ('I', '(5, (7.0, 2.0))'), ('I', '(5, (8.0, 1.0))'), ('I', '(5, (9.0, 0.0))'), ('I', '(6, (0.0, 9.0))'), ('I', '(6, (1.0, 8.0))'), ('I', '(6, (2.0, 7.0))'), ('I', '(6, (3.0, 6.0))'), ('I', '(6, (4.0, 5.0))'), ('I', '(6, (5.0, 4.0))'), ('I', '(6, (6.0, 3.0))'), ('I', '(6, (7.0, 2.0))'), ('I', '(6, (8.0, 1.0))'), ('I', '(6, (9.0, 0.0))'), ('I', '(7, (0.0, 9.0))'), ('I', '(7, (1.0, 8.0))'), ('I', '(7, (2.0, 7.0))'), ('I', '(7, (3.0, 6.0))'), ('I', '(7, (4.0, 5.0))'), ('I', '(7, (5.0, 4.0))'), ('I', '(7, (6.0, 3.0))'), ('I', '(7, (7.0, 2.0))'), ('I', '(7, (8.0, 1.0))'), ('I', '(7, (9.0, 0.0))'), ('I', '(8, (0.0, 9.0))'), ('I', '(8, (1.0, 8.0))'), ('I', '(8, (2.0, 7.0))'), ('I', '(8, (3.0, 6.0))'), ('I', '(8, (4.0, 5.0))'), ('I', '(8, (5.0, 4.0))'), ('I', '(8, (6.0, 3.0))'), ('I', '(8, (7.0, 2.0))'), ('I', '(8, (8.0, 1.0))'), ('I', '(8, (9.0, 0.0))'), ('I', '(9, (0.0, 9.0))'), ('I', '(9, (1.0, 8.0))'), ('I', '(9, (2.0, 7.0))'), ('I', '(9, (3.0, 6.0))'), ('I', '(9, (4.0, 5.0))'), ('I', '(9, (5.0, 4.0))'), ('I', '(9, (6.0, 3.0))'), ('I', '(9, (7.0, 2.0))'), ('I', '(9, (8.0, 1.0))'), ('I', '(9, (9.0, 0.0))'), ('S', '(0, (0.0, 9.0))'), ('S', '(0, (9.0, 0.0))'), ('S', '(1, (0.0, 9.0))'), ('S', '(1, (4.0, 5.0))'), ('S', '(1, (9.0, 0.0))'), ('S', '(2, (0.0, 9.0))'), ('S', '(2, (3.0, 6.0))'), ('S', '(2, (6.0, 3.0))'), ('S', '(2, (9.0, 0.0))'), ('S', '(3, (0.0, 9.0))'), ('S', '(3, (2.0, 7.0))'), ('S', '(3, (4.0, 5.0))'), ('S', '(3, (7.0, 2.0))'), ('S', '(3, (9.0, 0.0))'), ('S', '(4, (0.0, 9.0))'), ('S', '(4, (1.0, 8.0))'), ('S', '(4, (3.0, 6.0))'), ('S', '(4, (4.0, 5.0))'), ('S', '(4, (5.0, 4.0))'), ('S', '(4, (6.0, 3.0))'), ('S', '(4, (7.0, 2.0))'), ('S', '(4, (8.0, 1.0))'), ('S', '(4, (9.0, 0.0))'), ('S', '(5, (0.0, 9.0))'), ('S', '(5, (1.0, 8.0))'), ('S', '(5, (2.0, 7.0))'), ('S', '(5, (3.0, 6.0))'), ('S', '(5, (4.0, 5.0))'), ('S', '(5, (5.0, 4.0))'), ('S', '(5, (6.0, 3.0))'), ('S', '(5, (7.0, 2.0))'), ('S', '(5, (8.0, 1.0))'), ('S', '(5, (9.0, 0.0))'), ('S', '(6, (0.0, 9.0))'), ('S', '(6, (1.0, 8.0))'), ('S', '(6, (2.0, 7.0))'), ('S', '(6, (3.0, 6.0))'), ('S', '(6, (4.0, 5.0))'), ('S', '(6, (5.0, 4.0))'), ('S', '(6, (6.0, 3.0))'), ('S', '(6, (7.0, 2.0))'), ('S', '(6, (8.0, 1.0))'), ('S', '(6, (9.0, 0.0))'), ('S', '(7, (0.0, 9.0))'), ('S', '(7, (1.0, 8.0))'), ('S', '(7, (2.0, 7.0))'), ('S', '(7, (3.0, 6.0))'), ('S', '(7, (4.0, 5.0))'), ('S', '(7, (5.0, 4.0))'), ('S', '(7, (6.0, 3.0))'), ('S', '(7, (7.0, 2.0))'), ('S', '(7, (8.0, 1.0))'), ('S', '(7, (9.0, 0.0))'), ('S', '(8, (0.0, 9.0))'), ('S', '(8, (1.0, 8.0))'), ('S', '(8, (2.0, 7.0))'), ('S', '(8, (3.0, 6.0))'), ('S', '(8, (4.0, 5.0))'), ('S', '(8, (5.0, 4.0))'), ('S', '(8, (6.0, 3.0))'), ('S', '(8, (7.0, 2.0))'), ('S', '(8, (8.0, 1.0))'), ('S', '(8, (9.0, 0.0))'), ('S', '(9, (0.0, 9.0))'), ('S', '(9, (1.0, 8.0))'), ('S', '(9, (2.0, 7.0))'), ('S', '(9, (3.0, 6.0))'), ('S', '(9, (4.0, 5.0))'), ('S', '(9, (5.0, 4.0))'), ('S', '(9, (6.0, 3.0))'), ('S', '(9, (7.0, 2.0))'), ('S', '(9, (8.0, 1.0))'), ('S', '(9, (9.0, 0.0))')]
init = [0.06718274524298364, 0.00746474946314846, 0.010688709304633105, 0.0023752687343629123, 0.00013195937413127293, 0.0034909178407053197, 0.0011636392802351074, 0.0001292932533594564, 4.788639013313198e-06, 0.001530506913366158, 0.0006802252948294031, 0.00011337088247156725, 8.397843146042016e-06, 2.3327342072338952e-07, 0.0012383772698788505, 0.0007379735186289062, 0.00018065616407553087, 1.2342258388639176e-05, 1.0816213328024062e-05, 1.028521532386598e-06, 6.009007404457809e-07, 4.5712068106071125e-08, 1.4199869567426089e-08, 0.00045291546216958214, 0.0003719912565539929, 0.00013276316323645987, 1.3636120895385702e-05, 1.5116242570141412e-05, 1.4691485433585248e-06, 1.68347171547972e-07, 1.0729585686545596e-07, 3.92443585934729e-09, 6.170352833925182e-11, 0.0002927728634315984, 0.00016473870333289086, 6.644290729616807e-05, 1.6347789682417304e-05, 2.636816689114343e-06, 2.8647482289256453e-07, 2.0876187450705832e-08, 9.81812385726637e-10, 2.700700315244097e-11, 3.3079694639810404e-13, 0.0003639573319807411, 0.000130219030361761, 5.3362384745955996e-05, 1.0986238468476576e-05, 1.345891125659841e-06, 7.053921111610634e-08, 5.622128448945036e-09, 2.57250002112718e-10, 9.171596631755796e-12, 2.0389495494245233e-13, 0.0002879418938044746, 0.0002104314685847814, 3.346905965830814e-05, 3.926679601542397e-06, 1.4433592821842347e-07, 4.372123569092932e-09, 6.290304592527582e-11, 1.154966780666092e-12, 4.1312602475033585e-15, 1.2813944181540147e-17, 0.00012044479882877357, 9.796932184535248e-05, 7.515129328044542e-06, 1.2594505744728676e-07, 1.0626459143854393e-09, 1.835159460017265e-12, 2.2254412940970934e-15, 2.2707337350884796e-18, 1.088845412190772e-22, 6.317777934678917e-28, 0.6046447071868527, 0.06718274516833615, 0.09619838374169794, 0.021377418609266213, 0.0011876343671814562, 0.031418260566347875, 0.010472753522115965, 0.0011636392802351076, 4.309775111981878e-05, 0.01377456222029542, 0.006122027653464629, 0.001020337942244105, 7.558058831437812e-05, 2.0994607865105053e-06, 0.011145395428909653, 0.006641761667660154, 0.0016259054766797777, 0.00011108032549775256, 9.734591995221656e-05, 9.256693791479383e-06, 5.408106664012027e-06, 4.1140861295464006e-07, 1.2779882610683483e-07, 0.004076239159526239, 0.003347921308985936, 0.0011948684691281387, 0.0001227250880584713, 0.00013604618313127272, 1.3222336890226724e-05, 1.515124543931748e-06, 9.656627117891036e-07, 3.53199227341256e-08, 5.553317550532663e-10, 0.002634955770884386, 0.0014826483299960177, 0.0005979861656655125, 0.00014713010714175576, 2.373135020202908e-05, 2.5782734060330807e-06, 1.8788568705635251e-07, 8.836311471539733e-09, 2.430630283719687e-10, 2.9771725175829366e-12, 0.00327561598782667, 0.001171971273255849, 0.0004802614627136039, 9.887614621628918e-05, 1.2113020130938567e-05, 6.34852900044957e-07, 5.0599156040505326e-08, 2.3152500190144618e-09, 8.254436968580217e-11, 1.835054594482071e-12, 0.0025914770442402716, 0.0018938832172630327, 0.00030122153692477326, 3.534011641388157e-05, 1.2990233539658108e-06, 3.934911212183639e-08, 5.661274133274826e-10, 1.0394701025994825e-11, 3.718134222753024e-14, 1.1532549763386135e-16, 0.001084003189458962, 0.0008817238966081718, 6.763616395240089e-05, 1.1335055170255802e-06, 9.563813229468947e-09, 1.651643514015539e-11, 2.0028971646873847e-14, 2.0436603615796312e-17, 9.799608709716947e-22, 5.686000141211026e-27]
centroid_vectors = [[0.0, 0.9999999980000001], [1.0, 0.0], [0.0, 2.0], [1.0, 1.0], [2.0, 0.0], [0.0, 3.0], [1.0, 2.0], [2.0, 1.0], [3.0, 0.0], [0.0, 4.0], [1.0, 3.0], [2.0, 2.0], [3.0, 1.0], [4.0, 0.0], [0.0, 5.35206956077279], [1.0, 4.35206956077279], [2.0, 3.35206956077279], [3.0, 3.0], [3.0, 2.0], [4.0, 2.0], [4.0, 1.0], [5.0, 1.0], [5.35206956077279, 0.0], [0.0, 7.388977681778915], [1.0, 6.388977681778915], [2.0, 5.388977681778915], [3.0, 5.0], [3.388977681778915, 4.0], [4.0, 3.0], [5.0, 3.0], [5.388977681778915, 2.0], [6.388977681778915, 1.0], [7.388977681778915, 0.0], [0.2914191303838607, 9.291419130383861], [1.4112715187212599, 8.0], [2.41127151872126, 7.0], [3.41127151872126, 6.0], [4.41127151872126, 5.0], [5.411271518721261, 4.0], [6.41127151872126, 3.0], [7.41127151872126, 2.0], [8.41127151872126, 1.0], [9.41127151872126, 0.0], [0.5, 11.660321251579903], [2.0, 10.160321251579903], [3.137549058190282, 9.275818272607482], [4.3028595839107275, 8.000692576503148], [5.6675816630201235, 6.6675816630201235], [6.795175806493424, 5.365145445086478], [8.000692576503148, 4.3028595839107275], [9.275818272607482, 3.137549058190282], [10.160321251579903, 2.0], [11.660321251579903, 0.5], [0.713274796330791, 18.359685321173462], [2.897398093465365, 15.83490657431687], [4.920260179177032, 14.366530416616843], [6.717444619997812, 12.22197032630501], [8.82118811465423, 10.374185797620195], [10.58483542220923, 8.311405220992205], [12.610160159869366, 6.65197839427622], [14.299600301666342, 4.650618608067716], [16.245579340557992, 2.769201108985195], [18.371209614910647, 0.6720482064945359], [1.5354262517716513, 33.76592723897441], [5.34698769228858, 29.987936500142908], [8.900166681865677, 26.357074778306135], [12.526298221750656, 23.015862854830033], [16.04744088571564, 19.259115374223597], [19.646284771937367, 15.755764993554886], [23.14175692586532, 12.354954502716202], [26.544858766934823, 8.760885358593132], [30.099298142104388, 5.1874949990260655], [33.84651037687433, 1.4763772084427265], [0.0, 0.9999999980000001], [1.0, 0.0], [0.0, 2.0], [1.0, 1.0], [2.0, 0.0], [0.0, 3.0], [1.0, 2.0], [2.0, 1.0], [3.0, 0.0], [0.0, 4.0], [1.0, 3.0], [2.0, 2.0], [3.0, 1.0], [4.0, 0.0], [0.0, 5.35206956077279], [1.0, 4.35206956077279], [2.0, 3.35206956077279], [3.0, 3.0], [3.0, 2.0], [4.0, 2.0], [4.0, 1.0], [5.0, 1.0], [5.35206956077279, 0.0], [0.0, 7.388977681778915], [1.0, 6.388977681778915], [2.0, 5.388977681778915], [3.0, 5.0], [3.388977681778915, 4.0], [4.0, 3.0], [5.0, 3.0], [5.388977681778915, 2.0], [6.388977681778915, 1.0], [7.388977681778915, 0.0], [0.2914191303838607, 9.291419130383861], [1.4112715187212599, 8.0], [2.41127151872126, 7.0], [3.41127151872126, 6.0], [4.41127151872126, 5.0], [5.411271518721261, 4.0], [6.41127151872126, 3.0], [7.41127151872126, 2.0], [8.41127151872126, 1.0], [9.41127151872126, 0.0], [0.5, 11.660321251579903], [2.0, 10.160321251579903], [3.137549058190282, 9.275818272607482], [4.3028595839107275, 8.000692576503148], [5.6675816630201235, 6.6675816630201235], [6.795175806493424, 5.365145445086478], [8.000692576503148, 4.3028595839107275], [9.275818272607482, 3.137549058190282], [10.160321251579903, 2.0], [11.660321251579903, 0.5], [0.713274796330791, 18.359685321173462], [2.897398093465365, 15.83490657431687], [4.920260179177032, 14.366530416616843], [6.717444619997812, 12.22197032630501], [8.82118811465423, 10.374185797620195], [10.58483542220923, 8.311405220992205], [12.610160159869366, 6.65197839427622], [14.299600301666342, 4.650618608067716], [16.245579340557992, 2.769201108985195], [18.371209614910647, 0.6720482064945359], [1.5354262517716513, 33.76592723897441], [5.34698769228858, 29.987936500142908], [8.900166681865677, 26.357074778306135], [12.526298221750656, 23.015862854830033], [16.04744088571564, 19.259115374223597], [19.646284771937367, 15.755764993554886], [23.14175692586532, 12.354954502716202], [26.544858766934823, 8.760885358593132], [30.099298142104388, 5.1874949990260655], [33.84651037687433, 1.4763772084427265]]
beta_weight = {('(9, (8.0, 1.0))', 'I', 'I', 'S'): 45.148947213156596, ('(9, (8.0, 1.0))', 'I', 'S', 'I'): 4696.300726452545, ('(9, (8.0, 1.0))', 'S', 'I', 'S'): 7.781242498539098, ('(9, (8.0, 1.0))', 'S', 'S', 'I'): 803.795571936217, ('(9, (4.0, 5.0))', 'I', 'I', 'S'): 24.071161328573446, ('(9, (4.0, 5.0))', 'I', 'S', 'I'): 1338.3984115499693, ('(9, (4.0, 5.0))', 'S', 'I', 'S'): 28.888673061335385, ('(9, (4.0, 5.0))', 'S', 'S', 'I'): 1593.5702128428181, ('(9, (0.0, 9.0))', 'I', 'I', 'S'): 2.303139377657478, ('(9, (0.0, 9.0))', 'I', 'S', 'I'): 19.19379093416274, ('(9, (0.0, 9.0))', 'S', 'I', 'S'): 50.64889085846161, ('(9, (0.0, 9.0))', 'S', 'S', 'I'): 262.81566124990417, ('(9, (9.0, 0.0))', 'I', 'I', 'S'): 50.76976556531151, ('(9, (9.0, 0.0))', 'I', 'S', 'I'): 5925.07032218627, ('(9, (9.0, 0.0))', 'S', 'I', 'S'): 2.21456581266409, ('(9, (9.0, 0.0))', 'S', 'S', 'I'): 253.70333025387646, ('(9, (2.0, 7.0))', 'I', 'I', 'S'): 13.350250022798507, ('(9, (2.0, 7.0))', 'I', 'S', 'I'): 415.1251041213621, ('(9, (2.0, 7.0))', 'S', 'I', 'S'): 39.535612167459206, ('(9, (2.0, 7.0))', 'S', 'S', 'I'): 1209.0259336949098, ('(6, (9.0, 0.0))', 'I', 'I', 'S'): 14.11690727808189, ('(6, (9.0, 0.0))', 'I', 'S', 'I'): 444.07079427851966, ('(6, (9.0, 0.0))', 'S', 'I', 'S'): 0.0, ('(6, (9.0, 0.0))', 'S', 'S', 'I'): 0.0, ('(9, (3.0, 6.0))', 'I', 'I', 'S'): 18.78944733262598, ('(9, (3.0, 6.0))', 'I', 'S', 'I'): 816.284347863814, ('(9, (3.0, 6.0))', 'S', 'I', 'S'): 34.52379428224504, ('(9, (3.0, 6.0))', 'S', 'S', 'I'): 1484.8571663853972, ('(9, (7.0, 2.0))', 'I', 'I', 'S'): 39.81728815040223, ('(9, (7.0, 2.0))', 'I', 'S', 'I'): 3654.31848168802, ('(9, (7.0, 2.0))', 'S', 'I', 'S'): 13.141328037889695, ('(9, (7.0, 2.0))', 'S', 'S', 'I'): 1197.9017007157147, ('(9, (6.0, 3.0))', 'I', 'I', 'S'): 34.712635388797985, ('(9, (6.0, 3.0))', 'I', 'S', 'I'): 2775.344322991544, ('(9, (6.0, 3.0))', 'S', 'I', 'S'): 18.532431754074302, ('(9, (6.0, 3.0))', 'S', 'S', 'I'): 1473.2545248547735, ('(4, (5.0, 4.0))', 'I', 'I', 'S'): 4.5, ('(4, (5.0, 4.0))', 'I', 'S', 'I'): 45.0, ('(4, (5.0, 4.0))', 'S', 'I', 'S'): 3.0, ('(4, (5.0, 4.0))', 'S', 'S', 'I'): 30.0, ('(9, (1.0, 8.0))', 'I', 'I', 'S'): 8.020481538432868, ('(9, (1.0, 8.0))', 'I', 'S', 'I'): 153.79440885511355, ('(9, (1.0, 8.0))', 'S', 'I', 'S'): 44.98190475021436, ('(9, (1.0, 8.0))', 'S', 'S', 'I'): 824.9976502504544, ('(8, (4.0, 5.0))', 'I', 'I', 'S'): 13.231782171981344, ('(8, (4.0, 5.0))', 'I', 'S', 'I'): 401.43955277492717, ('(8, (4.0, 5.0))', 'S', 'I', 'S'): 15.561278696430293, ('(8, (4.0, 5.0))', 'S', 'S', 'I'): 468.824231868974, ('(9, (5.0, 4.0))', 'I', 'I', 'S'): 29.469427157906075, ('(9, (5.0, 4.0))', 'I', 'S', 'I'): 2001.9342311806697, ('(9, (5.0, 4.0))', 'S', 'I', 'S'): 23.633647490332326, ('(9, (5.0, 4.0))', 'S', 'S', 'I'): 1597.2167647586743, ('(7, (0.0, 9.0))', 'I', 'I', 'S'): 0.75, ('(7, (0.0, 9.0))', 'I', 'S', 'I'): 2.5, ('(7, (0.0, 9.0))', 'S', 'I', 'S'): 17.490481877369852, ('(7, (0.0, 9.0))', 'S', 'S', 'I'): 27.90080312894976, ('(7, (2.0, 7.0))', 'I', 'I', 'S'): 4.706323587285423, ('(7, (2.0, 7.0))', 'I', 'S', 'I'): 49.814217036659855, ('(7, (2.0, 7.0))', 'S', 'I', 'S'): 13.913727408911225, ('(7, (2.0, 7.0))', 'S', 'S', 'I'): 146.01472699862632, ('(8, (3.0, 6.0))', 'I', 'I', 'S'): 10.076166929996717, ('(8, (3.0, 6.0))', 'I', 'S', 'I'): 234.1896309066599, ('(8, (3.0, 6.0))', 'S', 'I', 'S'): 18.332955489457515, ('(8, (3.0, 6.0))', 'S', 'S', 'I'): 422.0446559498442, ('(8, (6.0, 3.0))', 'I', 'I', 'S'): 18.915240239804042, ('(8, (6.0, 3.0))', 'I', 'S', 'I'): 819.1982526580551, ('(8, (6.0, 3.0))', 'S', 'I', 'S'): 9.977967591414329, ('(8, (6.0, 3.0))', 'S', 'S', 'I'): 430.22542325147094, ('(4, (0.0, 9.0))', 'I', 'I', 'S'): 0.0, ('(4, (0.0, 9.0))', 'I', 'S', 'I'): 0.0, ('(4, (0.0, 9.0))', 'S', 'I', 'S'): 8.028104341159185, ('(4, (0.0, 9.0))', 'S', 'S', 'I'): 0.0, ('(8, (1.0, 8.0))', 'I', 'I', 'S'): 4.346097140198047, ('(8, (1.0, 8.0))', 'I', 'S', 'I'): 44.953745506817306, ('(8, (1.0, 8.0))', 'S', 'I', 'S'): 23.75235986147531, ('(8, (1.0, 8.0))', 'S', 'S', 'I'): 234.8756959845103, ('(7, (6.0, 3.0))', 'I', 'I', 'S'): 12.00103886475472, ('(7, (6.0, 3.0))', 'I', 'S', 'I'): 323.0805390768434, ('(7, (6.0, 3.0))', 'S', 'I', 'S'): 6.454289375866091, ('(7, (6.0, 3.0))', 'S', 'S', 'I'): 172.78964169082178, ('(8, (9.0, 0.0))', 'I', 'I', 'S'): 27.556814422365985, ('(8, (9.0, 0.0))', 'I', 'S', 'I'): 1739.2585871785259, ('(8, (9.0, 0.0))', 'S', 'I', 'S'): 1.0080723097418038, ('(8, (9.0, 0.0))', 'S', 'S', 'I'): 62.94864897706878, ('(8, (7.0, 2.0))', 'I', 'I', 'S'): 21.44940045249951, ('(8, (7.0, 2.0))', 'I', 'S', 'I'): 1055.1723046160766, ('(8, (7.0, 2.0))', 'S', 'I', 'S'): 6.9759279121015725, ('(8, (7.0, 2.0))', 'S', 'S', 'I'): 341.28146275974916, ('(8, (0.0, 9.0))', 'I', 'I', 'S'): 1.0699121944961867, ('(8, (0.0, 9.0))', 'I', 'S', 'I'): 4.988205957192563, ('(8, (0.0, 9.0))', 'S', 'I', 'S'): 27.539527981760195, ('(8, (0.0, 9.0))', 'S', 'S', 'I'): 66.58253694047403, ('(7, (3.0, 6.0))', 'I', 'I', 'S'): 6.454289375866091, ('(7, (3.0, 6.0))', 'I', 'S', 'I'): 93.62868127598276, ('(7, (3.0, 6.0))', 'S', 'I', 'S'): 12.001038864754722, ('(7, (3.0, 6.0))', 'S', 'S', 'I'): 172.78964169082178, ('(8, (8.0, 1.0))', 'I', 'I', 'S'): 24.368369010836982, ('(8, (8.0, 1.0))', 'I', 'S', 'I'): 1357.2024170172508, ('(8, (8.0, 1.0))', 'S', 'I', 'S'): 4.153801663477792, ('(8, (8.0, 1.0))', 'S', 'S', 'I'): 230.348221042474, ('(8, (2.0, 7.0))', 'I', 'I', 'S'): 7.380390268765547, ('(8, (2.0, 7.0))', 'I', 'S', 'I'): 125.17611780391624, ('(8, (2.0, 7.0))', 'S', 'I', 'S'): 21.54979562492526, ('(8, (2.0, 7.0))', 'S', 'S', 'I'): 361.06392858281475, ('(5, (1.0, 8.0))', 'I', 'I', 'S'): 1.5, ('(5, (1.0, 8.0))', 'I', 'S', 'I'): 5.0, ('(5, (1.0, 8.0))', 'S', 'I', 'S'): 9.583466522668372, ('(5, (1.0, 8.0))', 'S', 'S', 'I'): 31.944888408894574, ('(8, (5.0, 4.0))', 'I', 'I', 'S'): 15.877253133313848, ('(8, (5.0, 4.0))', 'I', 'S', 'I'): 578.5169251484745, ('(8, (5.0, 4.0))', 'S', 'I', 'S'): 12.467107831488304, ('(8, (5.0, 4.0))', 'S', 'S', 'I'): 452.6469128131708, ('(6, (5.0, 4.0))', 'I', 'I', 'S'): 8.116907278081891, ('(6, (5.0, 4.0))', 'I', 'S', 'I'): 147.6199335296693, ('(6, (5.0, 4.0))', 'S', 'I', 'S'): 6.0, ('(6, (5.0, 4.0))', 'S', 'S', 'I'): 108.2254303744252, ('(7, (7.0, 2.0))', 'I', 'I', 'S'): 13.913727408911225, ('(7, (7.0, 2.0))', 'I', 'S', 'I'): 435.720225247468, ('(7, (7.0, 2.0))', 'S', 'I', 'S'): 4.706323587285423, ('(7, (7.0, 2.0))', 'S', 'S', 'I'): 146.01472699862632, ('(6, (1.0, 8.0))', 'I', 'I', 'S'): 2.1169072780818903, ('(6, (1.0, 8.0))', 'I', 'S', 'I'): 11.1690727808189, ('(6, (1.0, 8.0))', 'S', 'I', 'S'): 12.0, ('(6, (1.0, 8.0))', 'S', 'S', 'I'): 56.4508607488504, ('(4, (3.0, 6.0))', 'I', 'I', 'S'): 3.0, ('(4, (3.0, 6.0))', 'I', 'S', 'I'): 20.0, ('(4, (3.0, 6.0))', 'S', 'I', 'S'): 5.028104341159185, ('(4, (3.0, 6.0))', 'S', 'S', 'I'): 33.5206956077279, ('(4, (9.0, 0.0))', 'I', 'I', 'S'): 8.028104341159185, ('(4, (9.0, 0.0))', 'I', 'S', 'I'): 144.36382584250347, ('(4, (9.0, 0.0))', 'S', 'I', 'S'): 0.0, ('(4, (9.0, 0.0))', 'S', 'S', 'I'): 0.0, ('(5, (0.0, 9.0))', 'I', 'I', 'S'): 0.0, ('(5, (0.0, 9.0))', 'I', 'S', 'I'): 0.0, ('(5, (0.0, 9.0))', 'S', 'I', 'S'): 11.083466522668372, ('(5, (0.0, 9.0))', 'S', 'S', 'I'): 0.0, ('(5, (3.0, 6.0))', 'I', 'I', 'S'): 4.5, ('(5, (3.0, 6.0))', 'I', 'S', 'I'): 45.0, ('(5, (3.0, 6.0))', 'S', 'I', 'S'): 7.5, ('(5, (3.0, 6.0))', 'S', 'S', 'I'): 75.0, ('(7, (4.0, 5.0))', 'I', 'I', 'S'): 8.501372494530187, ('(7, (4.0, 5.0))', 'I', 'S', 'I'): 162.83225618109498, ('(7, (4.0, 5.0))', 'S', 'I', 'S'): 10.001372494530187, ('(7, (4.0, 5.0))', 'S', 'S', 'I'): 189.6665937573763, ('(7, (8.0, 1.0))', 'I', 'I', 'S'): 15.240481877369856, ('(7, (8.0, 1.0))', 'I', 'S', 'I'): 522.0716981578335, ('(7, (8.0, 1.0))', 'S', 'I', 'S'): 3.0, ('(7, (8.0, 1.0))', 'S', 'S', 'I'): 101.60321251579903, ('(3, (9.0, 0.0))', 'I', 'I', 'S'): 6.0, ('(3, (9.0, 0.0))', 'I', 'S', 'I'): 80.0, ('(3, (9.0, 0.0))', 'S', 'I', 'S'): 0.0, ('(3, (9.0, 0.0))', 'S', 'S', 'I'): 0.0, ('(4, (1.0, 8.0))', 'I', 'I', 'S'): 1.5, ('(4, (1.0, 8.0))', 'I', 'S', 'I'): 5.0, ('(4, (1.0, 8.0))', 'S', 'I', 'S'): 6.528104341159185, ('(4, (1.0, 8.0))', 'S', 'S', 'I'): 21.76034780386395, ('(5, (6.0, 3.0))', 'I', 'I', 'S'): 7.5, ('(5, (6.0, 3.0))', 'I', 'S', 'I'): 125.0, ('(5, (6.0, 3.0))', 'S', 'I', 'S'): 4.5, ('(5, (6.0, 3.0))', 'S', 'S', 'I'): 75.0, ('(7, (1.0, 8.0))', 'I', 'I', 'S'): 3.0000000000000004, ('(7, (1.0, 8.0))', 'I', 'S', 'I'): 20.0, ('(7, (1.0, 8.0))', 'S', 'I', 'S'): 15.240481877369856, ('(7, (1.0, 8.0))', 'S', 'S', 'I'): 101.60321251579903, ('(1, (9.0, 0.0))', 'I', 'I', 'S'): 3.0, ('(1, (9.0, 0.0))', 'I', 'S', 'I'): 20.0, ('(1, (9.0, 0.0))', 'S', 'I', 'S'): 0.0, ('(1, (9.0, 0.0))', 'S', 'S', 'I'): 0.0, ('(5, (8.0, 1.0))', 'I', 'I', 'S'): 9.583466522668372, ('(5, (8.0, 1.0))', 'I', 'S', 'I'): 205.28354931562944, ('(5, (8.0, 1.0))', 'S', 'I', 'S'): 1.5, ('(5, (8.0, 1.0))', 'S', 'S', 'I'): 31.944888408894574, ('(6, (0.0, 9.0))', 'I', 'I', 'S'): 0.43712869557579104, ('(6, (0.0, 9.0))', 'I', 'S', 'I'): 1.4570956519193035, ('(6, (0.0, 9.0))', 'S', 'I', 'S'): 13.93712869557579, ('(6, (0.0, 9.0))', 'S', 'S', 'I'): 13.11386086727373, ('(5, (4.0, 5.0))', 'I', 'I', 'S'): 5.083466522668372, ('(5, (4.0, 5.0))', 'I', 'S', 'I'): 58.61421886226202, ('(5, (4.0, 5.0))', 'S', 'I', 'S'): 6.0, ('(5, (4.0, 5.0))', 'S', 'S', 'I'): 67.7795536355783, ('(0, (0.0, 9.0))', 'I', 'I', 'S'): 0.0, ('(0, (0.0, 9.0))', 'I', 'S', 'I'): 0.0, ('(0, (0.0, 9.0))', 'S', 'I', 'S'): 1.4999999970000002, ('(0, (0.0, 9.0))', 'S', 'S', 'I'): 0.0, ('(7, (5.0, 4.0))', 'I', 'I', 'S'): 10.192763709740136, ('(7, (5.0, 4.0))', 'I', 'S', 'I'): 233.2812898255115, ('(7, (5.0, 4.0))', 'S', 'I', 'S'): 8.047718167629718, ('(7, (5.0, 4.0))', 'S', 'S', 'I'): 183.45691694208182, ('(4, (7.0, 2.0))', 'I', 'I', 'S'): 6.0, ('(4, (7.0, 2.0))', 'I', 'S', 'I'): 80.0, ('(4, (7.0, 2.0))', 'S', 'I', 'S'): 1.5, ('(4, (7.0, 2.0))', 'S', 'S', 'I'): 20.0, ('(3, (2.0, 7.0))', 'I', 'I', 'S'): 1.5, ('(3, (2.0, 7.0))', 'I', 'S', 'I'): 5.0, ('(3, (2.0, 7.0))', 'S', 'I', 'S'): 4.5, ('(3, (2.0, 7.0))', 'S', 'S', 'I'): 15.0, ('(7, (9.0, 0.0))', 'I', 'I', 'S'): 17.490481877369856, ('(7, (9.0, 0.0))', 'I', 'S', 'I'): 686.976516931532, ('(7, (9.0, 0.0))', 'S', 'I', 'S'): 0.75, ('(7, (9.0, 0.0))', 'S', 'S', 'I'): 27.900803128949757, ('(5, (7.0, 2.0))', 'I', 'I', 'S'): 8.083466522668372, ('(5, (7.0, 2.0))', 'I', 'S', 'I'): 146.3937724978403, ('(5, (7.0, 2.0))', 'S', 'I', 'S'): 3.0, ('(5, (7.0, 2.0))', 'S', 'S', 'I'): 53.88977681778915, ('(5, (2.0, 7.0))', 'I', 'I', 'S'): 3.0, ('(5, (2.0, 7.0))', 'I', 'S', 'I'): 20.0, ('(5, (2.0, 7.0))', 'S', 'I', 'S'): 8.083466522668372, ('(5, (2.0, 7.0))', 'S', 'S', 'I'): 53.88977681778914, ('(2, (6.0, 3.0))', 'I', 'I', 'S'): 3.0, ('(2, (6.0, 3.0))', 'I', 'S', 'I'): 20.0, ('(2, (6.0, 3.0))', 'S', 'I', 'S'): 1.5, ('(2, (6.0, 3.0))', 'S', 'S', 'I'): 10.0, ('(6, (2.0, 7.0))', 'I', 'I', 'S'): 3.6169072780818903, ('(6, (2.0, 7.0))', 'I', 'S', 'I'): 30.2817879680315, ('(6, (2.0, 7.0))', 'S', 'I', 'S'): 10.5, ('(6, (2.0, 7.0))', 'S', 'S', 'I'): 84.3945031552441, ('(4, (6.0, 3.0))', 'I', 'I', 'S'): 6.0, ('(4, (6.0, 3.0))', 'I', 'S', 'I'): 80.0, ('(4, (6.0, 3.0))', 'S', 'I', 'S'): 3.0, ('(4, (6.0, 3.0))', 'S', 'S', 'I'): 40.0, ('(2, (3.0, 6.0))', 'I', 'I', 'S'): 1.5, ('(2, (3.0, 6.0))', 'I', 'S', 'I'): 5.0, ('(2, (3.0, 6.0))', 'S', 'I', 'S'): 3.0, ('(2, (3.0, 6.0))', 'S', 'S', 'I'): 10.0, ('(4, (8.0, 1.0))', 'I', 'I', 'S'): 7.5, ('(4, (8.0, 1.0))', 'I', 'S', 'I'): 125.0, ('(4, (8.0, 1.0))', 'S', 'I', 'S'): 1.5, ('(4, (8.0, 1.0))', 'S', 'S', 'I'): 25.0, ('(5, (9.0, 0.0))', 'I', 'I', 'S'): 11.083466522668372, ('(5, (9.0, 0.0))', 'I', 'S', 'I'): 274.17332613341864, ('(5, (9.0, 0.0))', 'S', 'I', 'S'): 0.0, ('(5, (9.0, 0.0))', 'S', 'S', 'I'): 0.0, ('(3, (7.0, 2.0))', 'I', 'I', 'S'): 4.5, ('(3, (7.0, 2.0))', 'I', 'S', 'I'): 45.0, ('(3, (7.0, 2.0))', 'S', 'I', 'S'): 1.5, ('(3, (7.0, 2.0))', 'S', 'S', 'I'): 15.0, ('(6, (3.0, 6.0))', 'I', 'I', 'S'): 5.11690727808189, ('(6, (3.0, 6.0))', 'I', 'S', 'I'): 59.394503155244095, ('(6, (3.0, 6.0))', 'S', 'I', 'S'): 9.0, ('(6, (3.0, 6.0))', 'S', 'S', 'I'): 102.3381455616378, ('(1, (0.0, 9.0))', 'I', 'I', 'S'): 0.0, ('(1, (0.0, 9.0))', 'I', 'S', 'I'): 0.0, ('(1, (0.0, 9.0))', 'S', 'I', 'S'): 3.0, ('(1, (0.0, 9.0))', 'S', 'S', 'I'): 0.0, ('(5, (5.0, 4.0))', 'I', 'I', 'S'): 6.0, ('(5, (5.0, 4.0))', 'I', 'S', 'I'): 80.0, ('(5, (5.0, 4.0))', 'S', 'I', 'S'): 4.5, ('(5, (5.0, 4.0))', 'S', 'S', 'I'): 60.0, ('(1, (4.0, 5.0))', 'I', 'I', 'S'): 1.5, ('(1, (4.0, 5.0))', 'I', 'S', 'I'): 5.0, ('(1, (4.0, 5.0))', 'S', 'I', 'S'): 1.5, ('(1, (4.0, 5.0))', 'S', 'S', 'I'): 5.0, ('(6, (8.0, 1.0))', 'I', 'I', 'S'): 12.61690727808189, ('(6, (8.0, 1.0))', 'I', 'S', 'I'): 354.9580790913071, ('(6, (8.0, 1.0))', 'S', 'I', 'S'): 1.5, ('(6, (8.0, 1.0))', 'S', 'S', 'I'): 42.0563575936063, ('(2, (9.0, 0.0))', 'I', 'I', 'S'): 4.5, ('(2, (9.0, 0.0))', 'I', 'S', 'I'): 45.0, ('(2, (9.0, 0.0))', 'S', 'I', 'S'): 0.0, ('(2, (9.0, 0.0))', 'S', 'S', 'I'): 0.0, ('(2, (0.0, 9.0))', 'I', 'I', 'S'): 0.0, ('(2, (0.0, 9.0))', 'I', 'S', 'I'): 0.0, ('(2, (0.0, 9.0))', 'S', 'I', 'S'): 4.5, ('(2, (0.0, 9.0))', 'S', 'S', 'I'): 0.0, ('(6, (6.0, 3.0))', 'I', 'I', 'S'): 9.61690727808189, ('(6, (6.0, 3.0))', 'I', 'S', 'I'): 206.7326487168819, ('(6, (6.0, 3.0))', 'S', 'I', 'S'): 4.5, ('(6, (6.0, 3.0))', 'S', 'S', 'I'): 96.16907278081891, ('(6, (4.0, 5.0))', 'I', 'I', 'S'): 6.616907278081889, ('(6, (4.0, 5.0))', 'I', 'S', 'I'): 98.5072183424567, ('(6, (4.0, 5.0))', 'S', 'I', 'S'): 7.5, ('(6, (4.0, 5.0))', 'S', 'S', 'I'): 110.2817879680315, ('(0, (9.0, 0.0))', 'I', 'I', 'S'): 1.5, ('(0, (9.0, 0.0))', 'I', 'S', 'I'): 5.0, ('(0, (9.0, 0.0))', 'S', 'I', 'S'): 0.0, ('(0, (9.0, 0.0))', 'S', 'S', 'I'): 0.0, ('(6, (7.0, 2.0))', 'I', 'I', 'S'): 11.11690727808189, ('(6, (7.0, 2.0))', 'I', 'S', 'I'): 275.8453639040945, ('(6, (7.0, 2.0))', 'S', 'I', 'S'): 3.0, ('(6, (7.0, 2.0))', 'S', 'S', 'I'): 74.1127151872126, ('(4, (4.0, 5.0))', 'I', 'I', 'S'): 4.5, ('(4, (4.0, 5.0))', 'I', 'S', 'I'): 45.0, ('(4, (4.0, 5.0))', 'S', 'I', 'S'): 4.5, ('(4, (4.0, 5.0))', 'S', 'S', 'I'): 45.0, ('(3, (0.0, 9.0))', 'I', 'I', 'S'): 0.0, ('(3, (0.0, 9.0))', 'I', 'S', 'I'): 0.0, ('(3, (0.0, 9.0))', 'S', 'I', 'S'): 6.0, ('(3, (0.0, 9.0))', 'S', 'S', 'I'): 0.0, ('(3, (4.0, 5.0))', 'I', 'I', 'S'): 3.0, ('(3, (4.0, 5.0))', 'I', 'S', 'I'): 20.0, ('(3, (4.0, 5.0))', 'S', 'I', 'S'): 3.0, ('(3, (4.0, 5.0))', 'S', 'S', 'I'): 20.0}

def compute_beta(s,s1,s2):
	rate_sum = 0.0
	edge_count = 0.0
	s_i = states.index(s)

	for i, key in enumerate(sorted_keys):
		if key[0] != s1:
			continue
		centroid_vector = centroid_vectors[i]
		s_neighbor_count = centroid_vector[s_i]
		if s_neighbor_count == 0:
			continue
		rate_agg = beta_weight[(key[1], s, s1, s2)]
		rate_sum += rate_agg*x[key]
		edge_count += s_neighbor_count*x[key]

	final_rate = rate_sum/edge_count
	return final_rate

def f(x_flat, t):
	global solver_steps, x, dt_x
	solver_steps += 1
	x_flat[x_flat<=0.0] = 10**(-30)
	dt_x_flat = np.zeros(len(x_flat), dtype=np.double)
	for i in range(len(x_flat)):
		x[sorted_keys[i]] = x_flat[i]
	beta_I_I_to_I_S = compute_beta("I","I","S")
	beta_I_S_to_I_I = compute_beta("I","S","I")
	beta_S_I_to_S_S = compute_beta("S","I","S")
	beta_S_S_to_S_I = compute_beta("S","S","I")
	dt_x[('I', '(0, (0.0, 9.0))')] = 0+(0.0*x[('S', '(0, (0.0, 9.0))')])-(1.5000000000000002*x[('I', '(0, (0.0, 9.0))')])+beta_I_I_to_I_S*(0.0+x[('I', '(0, (9.0, 0.0))')]*0.9999999980000001)+beta_I_S_to_I_I*(0.0)-(beta_I_I_to_I_S*x[('I', '(0, (0.0, 9.0))')]*0.0)-(beta_I_S_to_I_I*x[('I', '(0, (0.0, 9.0))')]*0.9999999980000001)
	dt_x[('I', '(0, (9.0, 0.0))')] = 0+(5.0*x[('S', '(0, (9.0, 0.0))')])-(1.5*x[('I', '(0, (9.0, 0.0))')])+beta_I_I_to_I_S*(0.0)+beta_I_S_to_I_I*(0.0+x[('I', '(0, (0.0, 9.0))')]*1.0)-(beta_I_I_to_I_S*x[('I', '(0, (9.0, 0.0))')]*1.0)-(beta_I_S_to_I_I*x[('I', '(0, (9.0, 0.0))')]*0.0)
	dt_x[('I', '(1, (0.0, 9.0))')] = 0+(0.0*x[('S', '(1, (0.0, 9.0))')])-(1.5*x[('I', '(1, (0.0, 9.0))')])+beta_I_I_to_I_S*(0.0+x[('I', '(1, (4.0, 5.0))')]*1.0)+beta_I_S_to_I_I*(0.0)-(beta_I_I_to_I_S*x[('I', '(1, (0.0, 9.0))')]*0.0)-(beta_I_S_to_I_I*x[('I', '(1, (0.0, 9.0))')]*2.0)
	dt_x[('I', '(1, (4.0, 5.0))')] = 0+(5.0*x[('S', '(1, (4.0, 5.0))')])-(1.5*x[('I', '(1, (4.0, 5.0))')])+beta_I_I_to_I_S*(0.0+x[('I', '(1, (9.0, 0.0))')]*2.0)+beta_I_S_to_I_I*(0.0+x[('I', '(1, (0.0, 9.0))')]*2.0)-(beta_I_I_to_I_S*x[('I', '(1, (4.0, 5.0))')]*1.0)-(beta_I_S_to_I_I*x[('I', '(1, (4.0, 5.0))')]*1.0)
	dt_x[('I', '(1, (9.0, 0.0))')] = 0+(10.0*x[('S', '(1, (9.0, 0.0))')])-(1.5*x[('I', '(1, (9.0, 0.0))')])+beta_I_I_to_I_S*(0.0)+beta_I_S_to_I_I*(0.0+x[('I', '(1, (4.0, 5.0))')]*1.0)-(beta_I_I_to_I_S*x[('I', '(1, (9.0, 0.0))')]*2.0)-(beta_I_S_to_I_I*x[('I', '(1, (9.0, 0.0))')]*0.0)
	dt_x[('I', '(2, (0.0, 9.0))')] = 0+(0.0*x[('S', '(2, (0.0, 9.0))')])-(1.5*x[('I', '(2, (0.0, 9.0))')])+beta_I_I_to_I_S*(0.0+x[('I', '(2, (3.0, 6.0))')]*1.0)+beta_I_S_to_I_I*(0.0)-(beta_I_I_to_I_S*x[('I', '(2, (0.0, 9.0))')]*0.0)-(beta_I_S_to_I_I*x[('I', '(2, (0.0, 9.0))')]*3.0)
	dt_x[('I', '(2, (3.0, 6.0))')] = 0+(5.0*x[('S', '(2, (3.0, 6.0))')])-(1.5*x[('I', '(2, (3.0, 6.0))')])+beta_I_I_to_I_S*(0.0+x[('I', '(2, (6.0, 3.0))')]*2.0)+beta_I_S_to_I_I*(0.0+x[('I', '(2, (0.0, 9.0))')]*3.0)-(beta_I_I_to_I_S*x[('I', '(2, (3.0, 6.0))')]*1.0)-(beta_I_S_to_I_I*x[('I', '(2, (3.0, 6.0))')]*2.0)
	dt_x[('I', '(2, (6.0, 3.0))')] = 0+(10.0*x[('S', '(2, (6.0, 3.0))')])-(1.5*x[('I', '(2, (6.0, 3.0))')])+beta_I_I_to_I_S*(0.0+x[('I', '(2, (9.0, 0.0))')]*3.0)+beta_I_S_to_I_I*(0.0+x[('I', '(2, (3.0, 6.0))')]*2.0)-(beta_I_I_to_I_S*x[('I', '(2, (6.0, 3.0))')]*2.0)-(beta_I_S_to_I_I*x[('I', '(2, (6.0, 3.0))')]*1.0)
	dt_x[('I', '(2, (9.0, 0.0))')] = 0+(15.0*x[('S', '(2, (9.0, 0.0))')])-(1.5*x[('I', '(2, (9.0, 0.0))')])+beta_I_I_to_I_S*(0.0)+beta_I_S_to_I_I*(0.0+x[('I', '(2, (6.0, 3.0))')]*1.0)-(beta_I_I_to_I_S*x[('I', '(2, (9.0, 0.0))')]*3.0)-(beta_I_S_to_I_I*x[('I', '(2, (9.0, 0.0))')]*0.0)
	dt_x[('I', '(3, (0.0, 9.0))')] = 0+(0.0*x[('S', '(3, (0.0, 9.0))')])-(1.5*x[('I', '(3, (0.0, 9.0))')])+beta_I_I_to_I_S*(0.0+x[('I', '(3, (2.0, 7.0))')]*1.0)+beta_I_S_to_I_I*(0.0)-(beta_I_I_to_I_S*x[('I', '(3, (0.0, 9.0))')]*0.0)-(beta_I_S_to_I_I*x[('I', '(3, (0.0, 9.0))')]*4.0)
	dt_x[('I', '(3, (2.0, 7.0))')] = 0+(5.0*x[('S', '(3, (2.0, 7.0))')])-(1.5*x[('I', '(3, (2.0, 7.0))')])+beta_I_I_to_I_S*(0.0+x[('I', '(3, (4.0, 5.0))')]*2.0)+beta_I_S_to_I_I*(0.0+x[('I', '(3, (0.0, 9.0))')]*4.0)-(beta_I_I_to_I_S*x[('I', '(3, (2.0, 7.0))')]*1.0)-(beta_I_S_to_I_I*x[('I', '(3, (2.0, 7.0))')]*3.0)
	dt_x[('I', '(3, (4.0, 5.0))')] = 0+(10.0*x[('S', '(3, (4.0, 5.0))')])-(1.5*x[('I', '(3, (4.0, 5.0))')])+beta_I_I_to_I_S*(0.0+x[('I', '(3, (7.0, 2.0))')]*3.0)+beta_I_S_to_I_I*(0.0+x[('I', '(3, (2.0, 7.0))')]*3.0)-(beta_I_I_to_I_S*x[('I', '(3, (4.0, 5.0))')]*2.0)-(beta_I_S_to_I_I*x[('I', '(3, (4.0, 5.0))')]*2.0)
	dt_x[('I', '(3, (7.0, 2.0))')] = 0+(15.0*x[('S', '(3, (7.0, 2.0))')])-(1.5*x[('I', '(3, (7.0, 2.0))')])+beta_I_I_to_I_S*(0.0+x[('I', '(3, (9.0, 0.0))')]*4.0)+beta_I_S_to_I_I*(0.0+x[('I', '(3, (4.0, 5.0))')]*2.0)-(beta_I_I_to_I_S*x[('I', '(3, (7.0, 2.0))')]*3.0)-(beta_I_S_to_I_I*x[('I', '(3, (7.0, 2.0))')]*1.0)
	dt_x[('I', '(3, (9.0, 0.0))')] = 0+(20.0*x[('S', '(3, (9.0, 0.0))')])-(1.5*x[('I', '(3, (9.0, 0.0))')])+beta_I_I_to_I_S*(0.0)+beta_I_S_to_I_I*(0.0+x[('I', '(3, (7.0, 2.0))')]*1.0)-(beta_I_I_to_I_S*x[('I', '(3, (9.0, 0.0))')]*4.0)-(beta_I_S_to_I_I*x[('I', '(3, (9.0, 0.0))')]*0.0)
	dt_x[('I', '(4, (0.0, 9.0))')] = 0+(0.0*x[('S', '(4, (0.0, 9.0))')])-(1.5*x[('I', '(4, (0.0, 9.0))')])+beta_I_I_to_I_S*(0.0+x[('I', '(4, (1.0, 8.0))')]*1.0)+beta_I_S_to_I_I*(0.0)-(beta_I_I_to_I_S*x[('I', '(4, (0.0, 9.0))')]*0.0)-(beta_I_S_to_I_I*x[('I', '(4, (0.0, 9.0))')]*5.35206956077279)
	dt_x[('I', '(4, (1.0, 8.0))')] = 0+(5.0*x[('S', '(4, (1.0, 8.0))')])-(1.5*x[('I', '(4, (1.0, 8.0))')])+beta_I_I_to_I_S*(0.0+x[('I', '(4, (3.0, 6.0))')]*2.0)+beta_I_S_to_I_I*(0.0+x[('I', '(4, (0.0, 9.0))')]*5.35206956077279)-(beta_I_I_to_I_S*x[('I', '(4, (1.0, 8.0))')]*1.0)-(beta_I_S_to_I_I*x[('I', '(4, (1.0, 8.0))')]*4.35206956077279)
	dt_x[('I', '(4, (3.0, 6.0))')] = 0+(10.0*x[('S', '(4, (3.0, 6.0))')])-(1.5*x[('I', '(4, (3.0, 6.0))')])+beta_I_I_to_I_S*(0.0+x[('I', '(4, (5.0, 4.0))')]*1.9437913176816286+x[('I', '(4, (4.0, 5.0))')]*1.0562086823183714)+beta_I_S_to_I_I*(0.0+x[('I', '(4, (1.0, 8.0))')]*4.35206956077279)-(beta_I_I_to_I_S*x[('I', '(4, (3.0, 6.0))')]*2.0)-(beta_I_S_to_I_I*x[('I', '(4, (3.0, 6.0))')]*3.35206956077279)
	dt_x[('I', '(4, (4.0, 5.0))')] = 0+(15.0*x[('S', '(4, (4.0, 5.0))')])-(1.5*x[('I', '(4, (4.0, 5.0))')])+beta_I_I_to_I_S*(0.0+x[('I', '(4, (6.0, 3.0))')]*4.0)+beta_I_S_to_I_I*(0.0+x[('I', '(4, (3.0, 6.0))')]*4.0)-(beta_I_I_to_I_S*x[('I', '(4, (4.0, 5.0))')]*3.0)-(beta_I_S_to_I_I*x[('I', '(4, (4.0, 5.0))')]*3.0)
	dt_x[('I', '(4, (5.0, 4.0))')] = 0+(15.0*x[('S', '(4, (5.0, 4.0))')])-(1.5*x[('I', '(4, (5.0, 4.0))')])+beta_I_I_to_I_S*(0.0+x[('I', '(4, (7.0, 2.0))')]*4.0)+beta_I_S_to_I_I*(0.0+x[('I', '(4, (3.0, 6.0))')]*3.0)-(beta_I_I_to_I_S*x[('I', '(4, (5.0, 4.0))')]*3.0)-(beta_I_S_to_I_I*x[('I', '(4, (5.0, 4.0))')]*2.0)
	dt_x[('I', '(4, (6.0, 3.0))')] = 0+(20.0*x[('S', '(4, (6.0, 3.0))')])-(1.5*x[('I', '(4, (6.0, 3.0))')])+beta_I_I_to_I_S*(0.0+x[('I', '(4, (8.0, 1.0))')]*5.0)+beta_I_S_to_I_I*(0.0+x[('I', '(4, (4.0, 5.0))')]*3.0)-(beta_I_I_to_I_S*x[('I', '(4, (6.0, 3.0))')]*4.0)-(beta_I_S_to_I_I*x[('I', '(4, (6.0, 3.0))')]*2.0)
	dt_x[('I', '(4, (7.0, 2.0))')] = 0+(20.0*x[('S', '(4, (7.0, 2.0))')])-(1.5*x[('I', '(4, (7.0, 2.0))')])+beta_I_I_to_I_S*(0.0+x[('I', '(4, (9.0, 0.0))')]*5.0)+beta_I_S_to_I_I*(0.0+x[('I', '(4, (5.0, 4.0))')]*2.0)-(beta_I_I_to_I_S*x[('I', '(4, (7.0, 2.0))')]*4.0)-(beta_I_S_to_I_I*x[('I', '(4, (7.0, 2.0))')]*1.0)
	dt_x[('I', '(4, (8.0, 1.0))')] = 0+(25.0*x[('S', '(4, (8.0, 1.0))')])-(1.5*x[('I', '(4, (8.0, 1.0))')])+beta_I_I_to_I_S*(0.0+x[('I', '(4, (9.0, 0.0))')]*6.0)+beta_I_S_to_I_I*(0.0+x[('I', '(4, (6.0, 3.0))')]*2.0)-(beta_I_I_to_I_S*x[('I', '(4, (8.0, 1.0))')]*5.0)-(beta_I_S_to_I_I*x[('I', '(4, (8.0, 1.0))')]*1.0)
	dt_x[('I', '(4, (9.0, 0.0))')] = 0+(26.76034780386395*x[('S', '(4, (9.0, 0.0))')])-(1.5*x[('I', '(4, (9.0, 0.0))')])+beta_I_I_to_I_S*(0.0)+beta_I_S_to_I_I*(0.0+x[('I', '(4, (8.0, 1.0))')]*0.35206956077279045+x[('I', '(4, (7.0, 2.0))')]*0.6479304392272095)-(beta_I_I_to_I_S*x[('I', '(4, (9.0, 0.0))')]*5.35206956077279)-(beta_I_S_to_I_I*x[('I', '(4, (9.0, 0.0))')]*0.0)
	dt_x[('I', '(5, (0.0, 9.0))')] = 0+(0.0*x[('S', '(5, (0.0, 9.0))')])-(1.5*x[('I', '(5, (0.0, 9.0))')])+beta_I_I_to_I_S*(0.0+x[('I', '(5, (1.0, 8.0))')]*1.0)+beta_I_S_to_I_I*(0.0)-(beta_I_I_to_I_S*x[('I', '(5, (0.0, 9.0))')]*0.0)-(beta_I_S_to_I_I*x[('I', '(5, (0.0, 9.0))')]*7.388977681778915)
	dt_x[('I', '(5, (1.0, 8.0))')] = 0+(5.0*x[('S', '(5, (1.0, 8.0))')])-(1.5*x[('I', '(5, (1.0, 8.0))')])+beta_I_I_to_I_S*(0.0+x[('I', '(5, (2.0, 7.0))')]*2.0)+beta_I_S_to_I_I*(0.0+x[('I', '(5, (0.0, 9.0))')]*7.388977681778915)-(beta_I_I_to_I_S*x[('I', '(5, (1.0, 8.0))')]*1.0)-(beta_I_S_to_I_I*x[('I', '(5, (1.0, 8.0))')]*6.388977681778915)
	dt_x[('I', '(5, (2.0, 7.0))')] = 0+(10.0*x[('S', '(5, (2.0, 7.0))')])-(1.5*x[('I', '(5, (2.0, 7.0))')])+beta_I_I_to_I_S*(0.0+x[('I', '(5, (3.0, 6.0))')]*1.166933045336744+x[('I', '(5, (4.0, 5.0))')]*1.833066954663256)+beta_I_S_to_I_I*(0.0+x[('I', '(5, (1.0, 8.0))')]*6.388977681778915)-(beta_I_I_to_I_S*x[('I', '(5, (2.0, 7.0))')]*2.0)-(beta_I_S_to_I_I*x[('I', '(5, (2.0, 7.0))')]*5.388977681778915)
	dt_x[('I', '(5, (3.0, 6.0))')] = 0+(15.0*x[('S', '(5, (3.0, 6.0))')])-(1.5*x[('I', '(5, (3.0, 6.0))')])+beta_I_I_to_I_S*(0.0+x[('I', '(5, (4.0, 5.0))')]*4.0)+beta_I_S_to_I_I*(0.0+x[('I', '(5, (2.0, 7.0))')]*6.0)-(beta_I_I_to_I_S*x[('I', '(5, (3.0, 6.0))')]*3.0)-(beta_I_S_to_I_I*x[('I', '(5, (3.0, 6.0))')]*5.0)
	dt_x[('I', '(5, (4.0, 5.0))')] = 0+(16.944888408894574*x[('S', '(5, (4.0, 5.0))')])-(1.5*x[('I', '(5, (4.0, 5.0))')])+beta_I_I_to_I_S*(0.0+x[('I', '(5, (5.0, 4.0))')]*2.4440892728843413+x[('I', '(5, (6.0, 3.0))')]*1.9448884088945735)+beta_I_S_to_I_I*(0.0+x[('I', '(5, (2.0, 7.0))')]*3.0551115911054265+x[('I', '(5, (3.0, 6.0))')]*1.9448884088945735)-(beta_I_I_to_I_S*x[('I', '(5, (4.0, 5.0))')]*3.388977681778915)-(beta_I_S_to_I_I*x[('I', '(5, (4.0, 5.0))')]*4.0)
	dt_x[('I', '(5, (5.0, 4.0))')] = 0+(20.0*x[('S', '(5, (5.0, 4.0))')])-(1.5*x[('I', '(5, (5.0, 4.0))')])+beta_I_I_to_I_S*(0.0+x[('I', '(5, (7.0, 2.0))')]*5.0)+beta_I_S_to_I_I*(0.0+x[('I', '(5, (4.0, 5.0))')]*4.0)-(beta_I_I_to_I_S*x[('I', '(5, (5.0, 4.0))')]*4.0)-(beta_I_S_to_I_I*x[('I', '(5, (5.0, 4.0))')]*3.0)
	dt_x[('I', '(5, (6.0, 3.0))')] = 0+(25.0*x[('S', '(5, (6.0, 3.0))')])-(1.5*x[('I', '(5, (6.0, 3.0))')])+beta_I_I_to_I_S*(0.0+x[('I', '(5, (7.0, 2.0))')]*6.0)+beta_I_S_to_I_I*(0.0+x[('I', '(5, (4.0, 5.0))')]*4.0)-(beta_I_I_to_I_S*x[('I', '(5, (6.0, 3.0))')]*5.0)-(beta_I_S_to_I_I*x[('I', '(5, (6.0, 3.0))')]*3.0)
	dt_x[('I', '(5, (7.0, 2.0))')] = 0+(26.944888408894574*x[('S', '(5, (7.0, 2.0))')])-(1.5*x[('I', '(5, (7.0, 2.0))')])+beta_I_I_to_I_S*(0.0+x[('I', '(5, (8.0, 1.0))')]*6.388977681778915)+beta_I_S_to_I_I*(0.0+x[('I', '(5, (5.0, 4.0))')]*1.833066954663256+x[('I', '(5, (6.0, 3.0))')]*1.166933045336744)-(beta_I_I_to_I_S*x[('I', '(5, (7.0, 2.0))')]*5.388977681778915)-(beta_I_S_to_I_I*x[('I', '(5, (7.0, 2.0))')]*2.0)
	dt_x[('I', '(5, (8.0, 1.0))')] = 0+(31.944888408894574*x[('S', '(5, (8.0, 1.0))')])-(1.5*x[('I', '(5, (8.0, 1.0))')])+beta_I_I_to_I_S*(0.0+x[('I', '(5, (9.0, 0.0))')]*7.388977681778915)+beta_I_S_to_I_I*(0.0+x[('I', '(5, (7.0, 2.0))')]*2.0)-(beta_I_I_to_I_S*x[('I', '(5, (8.0, 1.0))')]*6.388977681778915)-(beta_I_S_to_I_I*x[('I', '(5, (8.0, 1.0))')]*1.0)
	dt_x[('I', '(5, (9.0, 0.0))')] = 0+(36.94488840889457*x[('S', '(5, (9.0, 0.0))')])-(1.5*x[('I', '(5, (9.0, 0.0))')])+beta_I_I_to_I_S*(0.0)+beta_I_S_to_I_I*(0.0+x[('I', '(5, (8.0, 1.0))')]*1.0)-(beta_I_I_to_I_S*x[('I', '(5, (9.0, 0.0))')]*7.388977681778915)-(beta_I_S_to_I_I*x[('I', '(5, (9.0, 0.0))')]*0.0)
	dt_x[('I', '(6, (0.0, 9.0))')] = 0+(1.4570956519193035*x[('S', '(6, (0.0, 9.0))')])-(1.5*x[('I', '(6, (0.0, 9.0))')])+beta_I_I_to_I_S*(0.0+x[('I', '(6, (1.0, 8.0))')]*1.0+x[('I', '(6, (0.0, 9.0))')]*0.2914191303838607)+beta_I_S_to_I_I*(0.0+x[('I', '(6, (0.0, 9.0))')]*2.914191303838607)-(beta_I_I_to_I_S*x[('I', '(6, (0.0, 9.0))')]*0.2914191303838607)-(beta_I_S_to_I_I*x[('I', '(6, (0.0, 9.0))')]*9.291419130383861)
	dt_x[('I', '(6, (1.0, 8.0))')] = 0+(7.0563575936063*x[('S', '(6, (1.0, 8.0))')])-(1.5*x[('I', '(6, (1.0, 8.0))')])+beta_I_I_to_I_S*(0.0+x[('I', '(6, (2.0, 7.0))')]*2.41127151872126)+beta_I_S_to_I_I*(0.0+x[('I', '(6, (0.0, 9.0))')]*9.0)-(beta_I_I_to_I_S*x[('I', '(6, (1.0, 8.0))')]*1.4112715187212599)-(beta_I_S_to_I_I*x[('I', '(6, (1.0, 8.0))')]*8.0)
	dt_x[('I', '(6, (2.0, 7.0))')] = 0+(12.0563575936063*x[('S', '(6, (2.0, 7.0))')])-(1.5*x[('I', '(6, (2.0, 7.0))')])+beta_I_I_to_I_S*(0.0+x[('I', '(6, (3.0, 6.0))')]*3.41127151872126)+beta_I_S_to_I_I*(0.0+x[('I', '(6, (1.0, 8.0))')]*8.0)-(beta_I_I_to_I_S*x[('I', '(6, (2.0, 7.0))')]*2.41127151872126)-(beta_I_S_to_I_I*x[('I', '(6, (2.0, 7.0))')]*7.0)
	dt_x[('I', '(6, (3.0, 6.0))')] = 0+(17.0563575936063*x[('S', '(6, (3.0, 6.0))')])-(1.5*x[('I', '(6, (3.0, 6.0))')])+beta_I_I_to_I_S*(0.0+x[('I', '(6, (4.0, 5.0))')]*4.41127151872126)+beta_I_S_to_I_I*(0.0+x[('I', '(6, (2.0, 7.0))')]*7.0)-(beta_I_I_to_I_S*x[('I', '(6, (3.0, 6.0))')]*3.41127151872126)-(beta_I_S_to_I_I*x[('I', '(6, (3.0, 6.0))')]*6.0)
	dt_x[('I', '(6, (4.0, 5.0))')] = 0+(22.0563575936063*x[('S', '(6, (4.0, 5.0))')])-(1.5*x[('I', '(6, (4.0, 5.0))')])+beta_I_I_to_I_S*(0.0+x[('I', '(6, (5.0, 4.0))')]*5.411271518721261)+beta_I_S_to_I_I*(0.0+x[('I', '(6, (3.0, 6.0))')]*6.0)-(beta_I_I_to_I_S*x[('I', '(6, (4.0, 5.0))')]*4.41127151872126)-(beta_I_S_to_I_I*x[('I', '(6, (4.0, 5.0))')]*5.0)
	dt_x[('I', '(6, (5.0, 4.0))')] = 0+(27.0563575936063*x[('S', '(6, (5.0, 4.0))')])-(1.5*x[('I', '(6, (5.0, 4.0))')])+beta_I_I_to_I_S*(0.0+x[('I', '(6, (6.0, 3.0))')]*6.41127151872126)+beta_I_S_to_I_I*(0.0+x[('I', '(6, (4.0, 5.0))')]*5.0)-(beta_I_I_to_I_S*x[('I', '(6, (5.0, 4.0))')]*5.411271518721261)-(beta_I_S_to_I_I*x[('I', '(6, (5.0, 4.0))')]*4.0)
	dt_x[('I', '(6, (6.0, 3.0))')] = 0+(32.0563575936063*x[('S', '(6, (6.0, 3.0))')])-(1.5*x[('I', '(6, (6.0, 3.0))')])+beta_I_I_to_I_S*(0.0+x[('I', '(6, (7.0, 2.0))')]*7.41127151872126)+beta_I_S_to_I_I*(0.0+x[('I', '(6, (5.0, 4.0))')]*4.0)-(beta_I_I_to_I_S*x[('I', '(6, (6.0, 3.0))')]*6.41127151872126)-(beta_I_S_to_I_I*x[('I', '(6, (6.0, 3.0))')]*3.0)
	dt_x[('I', '(6, (7.0, 2.0))')] = 0+(37.0563575936063*x[('S', '(6, (7.0, 2.0))')])-(1.5*x[('I', '(6, (7.0, 2.0))')])+beta_I_I_to_I_S*(0.0+x[('I', '(6, (8.0, 1.0))')]*8.41127151872126)+beta_I_S_to_I_I*(0.0+x[('I', '(6, (6.0, 3.0))')]*3.0)-(beta_I_I_to_I_S*x[('I', '(6, (7.0, 2.0))')]*7.41127151872126)-(beta_I_S_to_I_I*x[('I', '(6, (7.0, 2.0))')]*2.0)
	dt_x[('I', '(6, (8.0, 1.0))')] = 0+(42.0563575936063*x[('S', '(6, (8.0, 1.0))')])-(1.5*x[('I', '(6, (8.0, 1.0))')])+beta_I_I_to_I_S*(0.0+x[('I', '(6, (9.0, 0.0))')]*9.41127151872126)+beta_I_S_to_I_I*(0.0+x[('I', '(6, (7.0, 2.0))')]*2.0)-(beta_I_I_to_I_S*x[('I', '(6, (8.0, 1.0))')]*8.41127151872126)-(beta_I_S_to_I_I*x[('I', '(6, (8.0, 1.0))')]*1.0)
	dt_x[('I', '(6, (9.0, 0.0))')] = 0+(47.0563575936063*x[('S', '(6, (9.0, 0.0))')])-(1.5*x[('I', '(6, (9.0, 0.0))')])+beta_I_I_to_I_S*(0.0)+beta_I_S_to_I_I*(0.0+x[('I', '(6, (8.0, 1.0))')]*1.0)-(beta_I_I_to_I_S*x[('I', '(6, (9.0, 0.0))')]*9.41127151872126)-(beta_I_S_to_I_I*x[('I', '(6, (9.0, 0.0))')]*0.0)
	dt_x[('I', '(7, (0.0, 9.0))')] = 0+(2.5*x[('S', '(7, (0.0, 9.0))')])-(1.5*x[('I', '(7, (0.0, 9.0))')])+beta_I_I_to_I_S*(0.0+x[('I', '(7, (0.0, 9.0))')]*0.5+x[('I', '(7, (1.0, 8.0))')]*1.0)+beta_I_S_to_I_I*(0.0+x[('I', '(7, (0.0, 9.0))')]*6.080160625789951)-(beta_I_I_to_I_S*x[('I', '(7, (0.0, 9.0))')]*0.5)-(beta_I_S_to_I_I*x[('I', '(7, (0.0, 9.0))')]*11.660321251579903)
	dt_x[('I', '(7, (1.0, 8.0))')] = 0+(10.0*x[('S', '(7, (1.0, 8.0))')])-(1.5000000000000002*x[('I', '(7, (1.0, 8.0))')])+beta_I_I_to_I_S*(0.0+x[('I', '(7, (2.0, 7.0))')]*3.0000000000000004)+beta_I_S_to_I_I*(0.0+x[('I', '(7, (0.0, 9.0))')]*11.160321251579903)-(beta_I_I_to_I_S*x[('I', '(7, (1.0, 8.0))')]*2.0)-(beta_I_S_to_I_I*x[('I', '(7, (1.0, 8.0))')]*10.160321251579903)
	dt_x[('I', '(7, (2.0, 7.0))')] = 0+(15.687745290951407*x[('S', '(7, (2.0, 7.0))')])-(1.5*x[('I', '(7, (2.0, 7.0))')])+beta_I_I_to_I_S*(0.0+x[('I', '(7, (2.0, 7.0))')]*0.5501962327611258+x[('I', '(7, (3.0, 6.0))')]*3.5873528254291553)+beta_I_S_to_I_I*(0.0+x[('I', '(7, (1.0, 8.0))')]*8.762778632514387+x[('I', '(7, (2.0, 7.0))')]*1.513039640093096)-(beta_I_I_to_I_S*x[('I', '(7, (2.0, 7.0))')]*3.137549058190282)-(beta_I_S_to_I_I*x[('I', '(7, (2.0, 7.0))')]*9.275818272607482)
	dt_x[('I', '(7, (3.0, 6.0))')] = 0+(21.514297919553638*x[('S', '(7, (3.0, 6.0))')])-(1.4999999999999996*x[('I', '(7, (3.0, 6.0))')])+beta_I_I_to_I_S*(0.0+x[('I', '(7, (4.0, 5.0))')]*4.449968468686773+x[('I', '(7, (3.0, 6.0))')]*0.8528911152239544)+beta_I_S_to_I_I*(0.0+x[('I', '(7, (2.0, 7.0))')]*7.465488569100031+x[('I', '(7, (3.0, 6.0))')]*1.5352040074031181)-(beta_I_I_to_I_S*x[('I', '(7, (3.0, 6.0))')]*4.3028595839107275)-(beta_I_S_to_I_I*x[('I', '(7, (3.0, 6.0))')]*8.000692576503148)
	dt_x[('I', '(7, (4.0, 5.0))')] = 0+(28.33790831510062*x[('S', '(7, (4.0, 5.0))')])-(1.5000000000000002*x[('I', '(7, (4.0, 5.0))')])+beta_I_I_to_I_S*(0.0+x[('I', '(7, (5.0, 4.0))')]*4.751770304938102+x[('I', '(7, (4.0, 5.0))')]*1.9158113580820224)+beta_I_S_to_I_I*(0.0+x[('I', '(7, (4.0, 5.0))')]*2.21652550584589+x[('I', '(7, (3.0, 6.0))')]*5.451056157174234)-(beta_I_I_to_I_S*x[('I', '(7, (4.0, 5.0))')]*5.6675816630201235)-(beta_I_S_to_I_I*x[('I', '(7, (4.0, 5.0))')]*6.6675816630201235)
	dt_x[('I', '(7, (5.0, 4.0))')] = 0+(33.97587903246712*x[('S', '(7, (5.0, 4.0))')])-(1.4999999999999998*x[('I', '(7, (5.0, 4.0))')])+beta_I_I_to_I_S*(0.0+x[('I', '(7, (6.0, 3.0))')]*7.795175806493424)+beta_I_S_to_I_I*(0.0+x[('I', '(7, (4.0, 5.0))')]*6.365145445086479)-(beta_I_I_to_I_S*x[('I', '(7, (5.0, 4.0))')]*6.795175806493424)-(beta_I_S_to_I_I*x[('I', '(7, (5.0, 4.0))')]*5.365145445086478)
	dt_x[('I', '(7, (6.0, 3.0))')] = 0+(40.00346288251574*x[('S', '(7, (6.0, 3.0))')])-(1.4999999999999996*x[('I', '(7, (6.0, 3.0))')])+beta_I_I_to_I_S*(0.0+x[('I', '(7, (7.0, 2.0))')]*7.465488569100031+x[('I', '(7, (6.0, 3.0))')]*1.5352040074031181)+beta_I_S_to_I_I*(0.0+x[('I', '(7, (5.0, 4.0))')]*4.449968468686773+x[('I', '(7, (6.0, 3.0))')]*0.8528911152239544)-(beta_I_I_to_I_S*x[('I', '(7, (6.0, 3.0))')]*8.000692576503148)-(beta_I_S_to_I_I*x[('I', '(7, (6.0, 3.0))')]*4.3028595839107275)
	dt_x[('I', '(7, (7.0, 2.0))')] = 0+(46.37909136303741*x[('S', '(7, (7.0, 2.0))')])-(1.5*x[('I', '(7, (7.0, 2.0))')])+beta_I_I_to_I_S*(0.0+x[('I', '(7, (8.0, 1.0))')]*8.762778632514387+x[('I', '(7, (7.0, 2.0))')]*1.513039640093096)+beta_I_S_to_I_I*(0.0+x[('I', '(7, (7.0, 2.0))')]*0.5501962327611258+x[('I', '(7, (6.0, 3.0))')]*3.5873528254291553)-(beta_I_I_to_I_S*x[('I', '(7, (7.0, 2.0))')]*9.275818272607482)-(beta_I_S_to_I_I*x[('I', '(7, (7.0, 2.0))')]*3.137549058190282)
	dt_x[('I', '(7, (8.0, 1.0))')] = 0+(50.801606257899515*x[('S', '(7, (8.0, 1.0))')])-(1.5*x[('I', '(7, (8.0, 1.0))')])+beta_I_I_to_I_S*(0.0+x[('I', '(7, (9.0, 0.0))')]*11.160321251579903)+beta_I_S_to_I_I*(0.0+x[('I', '(7, (7.0, 2.0))')]*3.0)-(beta_I_I_to_I_S*x[('I', '(7, (8.0, 1.0))')]*10.160321251579903)-(beta_I_S_to_I_I*x[('I', '(7, (8.0, 1.0))')]*2.0)
	dt_x[('I', '(7, (9.0, 0.0))')] = 0+(58.301606257899515*x[('S', '(7, (9.0, 0.0))')])-(1.4999999999999998*x[('I', '(7, (9.0, 0.0))')])+beta_I_I_to_I_S*(0.0+x[('I', '(7, (9.0, 0.0))')]*6.080160625789952)+beta_I_S_to_I_I*(0.0+x[('I', '(7, (9.0, 0.0))')]*0.5+x[('I', '(7, (8.0, 1.0))')]*1.0)-(beta_I_I_to_I_S*x[('I', '(7, (9.0, 0.0))')]*11.660321251579903)-(beta_I_S_to_I_I*x[('I', '(7, (9.0, 0.0))')]*0.5)
	dt_x[('I', '(8, (0.0, 9.0))')] = 0+(3.566373981653956*x[('S', '(8, (0.0, 9.0))')])-(1.5000000000000004*x[('I', '(8, (0.0, 9.0))')])+beta_I_I_to_I_S*(0.0+x[('I', '(8, (0.0, 9.0))')]*0.713274796330791+x[('I', '(8, (1.0, 8.0))')]*1.0)+beta_I_S_to_I_I*(0.0+x[('I', '(8, (0.0, 9.0))')]*10.986853034791995)-(beta_I_I_to_I_S*x[('I', '(8, (0.0, 9.0))')]*0.713274796330791)-(beta_I_S_to_I_I*x[('I', '(8, (0.0, 9.0))')]*18.359685321173462)
	dt_x[('I', '(8, (1.0, 8.0))')] = 0+(14.486990467326825*x[('S', '(8, (1.0, 8.0))')])-(1.4999999999999998*x[('I', '(8, (1.0, 8.0))')])+beta_I_I_to_I_S*(0.0+x[('I', '(8, (2.0, 7.0))')]*2.130324413508297+x[('I', '(8, (1.0, 8.0))')]*1.767073679957068)+beta_I_S_to_I_I*(0.0+x[('I', '(8, (1.0, 8.0))')]*8.501214244317705+x[('I', '(8, (0.0, 9.0))')]*8.333692329999165)-(beta_I_I_to_I_S*x[('I', '(8, (1.0, 8.0))')]*2.897398093465365)-(beta_I_S_to_I_I*x[('I', '(8, (1.0, 8.0))')]*15.83490657431687)
	dt_x[('I', '(8, (2.0, 7.0))')] = 0+(24.60130089588516*x[('S', '(8, (2.0, 7.0))')])-(1.4999999999999996*x[('I', '(8, (2.0, 7.0))')])+beta_I_I_to_I_S*(0.0+x[('I', '(8, (2.0, 7.0))')]*2.316033112867594+x[('I', '(8, (3.0, 6.0))')]*3.604227066309438)+beta_I_S_to_I_I*(0.0+x[('I', '(8, (1.0, 8.0))')]*8.965113454395176+x[('I', '(8, (2.0, 7.0))')]*6.401416962221666)-(beta_I_I_to_I_S*x[('I', '(8, (2.0, 7.0))')]*4.920260179177032)-(beta_I_S_to_I_I*x[('I', '(8, (2.0, 7.0))')]*14.366530416616843)
	dt_x[('I', '(8, (3.0, 6.0))')] = 0+(33.58722309998906*x[('S', '(8, (3.0, 6.0))')])-(1.4999999999999998*x[('I', '(8, (3.0, 6.0))')])+beta_I_I_to_I_S*(0.0+x[('I', '(8, (3.0, 6.0))')]*3.6468526863303192+x[('I', '(8, (4.0, 5.0))')]*4.070591933667493)+beta_I_S_to_I_I*(0.0+x[('I', '(8, (2.0, 7.0))')]*6.785813622130007+x[('I', '(8, (3.0, 6.0))')]*6.436156704175004)-(beta_I_I_to_I_S*x[('I', '(8, (3.0, 6.0))')]*6.717444619997812)-(beta_I_S_to_I_I*x[('I', '(8, (3.0, 6.0))')]*12.22197032630501)
	dt_x[('I', '(8, (4.0, 5.0))')] = 0+(44.10594057327114*x[('S', '(8, (4.0, 5.0))')])-(1.5000000000000002*x[('I', '(8, (4.0, 5.0))')])+beta_I_I_to_I_S*(0.0+x[('I', '(8, (5.0, 4.0))')]*5.188487243300213+x[('I', '(8, (4.0, 5.0))')]*4.632700871354016)+beta_I_S_to_I_I*(0.0+x[('I', '(8, (4.0, 5.0))')]*5.420799424506114+x[('I', '(8, (3.0, 6.0))')]*5.953386373114078)-(beta_I_I_to_I_S*x[('I', '(8, (4.0, 5.0))')]*8.82118811465423)-(beta_I_S_to_I_I*x[('I', '(8, (4.0, 5.0))')]*10.374185797620195)
	dt_x[('I', '(8, (5.0, 4.0))')] = 0+(52.92417711104616*x[('S', '(8, (5.0, 4.0))')])-(1.5000000000000004*x[('I', '(8, (5.0, 4.0))')])+beta_I_I_to_I_S*(0.0+x[('I', '(8, (5.0, 4.0))')]*4.952572709697543+x[('I', '(8, (6.0, 3.0))')]*6.632262712511688)+beta_I_S_to_I_I*(0.0+x[('I', '(8, (4.0, 5.0))')]*5.377053476613831+x[('I', '(8, (5.0, 4.0))')]*3.9343517443783735)-(beta_I_I_to_I_S*x[('I', '(8, (5.0, 4.0))')]*10.58483542220923)-(beta_I_S_to_I_I*x[('I', '(8, (5.0, 4.0))')]*8.311405220992205)
	dt_x[('I', '(8, (6.0, 3.0))')] = 0+(63.05080079934681*x[('S', '(8, (6.0, 3.0))')])-(1.5000000000000004*x[('I', '(8, (6.0, 3.0))')])+beta_I_I_to_I_S*(0.0+x[('I', '(8, (7.0, 2.0))')]*7.712047426582349+x[('I', '(8, (6.0, 3.0))')]*5.898112733287013)+beta_I_S_to_I_I*(0.0+x[('I', '(8, (6.0, 3.0))')]*3.2222698924860147+x[('I', '(8, (5.0, 4.0))')]*4.429708501790206)-(beta_I_I_to_I_S*x[('I', '(8, (6.0, 3.0))')]*12.610160159869366)-(beta_I_S_to_I_I*x[('I', '(8, (6.0, 3.0))')]*6.65197839427622)
	dt_x[('I', '(8, (7.0, 2.0))')] = 0+(71.4980015083317*x[('S', '(8, (7.0, 2.0))')])-(1.5*x[('I', '(8, (7.0, 2.0))')])+beta_I_I_to_I_S*(0.0+x[('I', '(8, (7.0, 2.0))')]*7.246645790887043+x[('I', '(8, (8.0, 1.0))')]*8.052954510779296)+beta_I_S_to_I_I*(0.0+x[('I', '(8, (7.0, 2.0))')]*2.5140224863969345+x[('I', '(8, (6.0, 3.0))')]*3.1365961216707814)-(beta_I_I_to_I_S*x[('I', '(8, (7.0, 2.0))')]*14.299600301666342)-(beta_I_S_to_I_I*x[('I', '(8, (7.0, 2.0))')]*4.650618608067716)
	dt_x[('I', '(8, (8.0, 1.0))')] = 0+(81.22789670278996*x[('S', '(8, (8.0, 1.0))')])-(1.5000000000000002*x[('I', '(8, (8.0, 1.0))')])+beta_I_I_to_I_S*(0.0+x[('I', '(8, (9.0, 0.0))')]*9.411277093941816+x[('I', '(8, (8.0, 1.0))')]*7.834302246616174)+beta_I_S_to_I_I*(0.0+x[('I', '(8, (8.0, 1.0))')]*1.5375354522180325+x[('I', '(8, (7.0, 2.0))')]*2.231665656767162)-(beta_I_I_to_I_S*x[('I', '(8, (8.0, 1.0))')]*16.245579340557992)-(beta_I_S_to_I_I*x[('I', '(8, (8.0, 1.0))')]*2.769201108985195)
	dt_x[('I', '(8, (9.0, 0.0))')] = 0+(91.85604807455329*x[('S', '(8, (9.0, 0.0))')])-(1.4999999999999996*x[('I', '(8, (9.0, 0.0))')])+beta_I_I_to_I_S*(0.0+x[('I', '(8, (9.0, 0.0))')]*10.730112339661265)+beta_I_S_to_I_I*(0.0+x[('I', '(8, (8.0, 1.0))')]*0.9999999999999998+x[('I', '(8, (9.0, 0.0))')]*0.6720482064945359)-(beta_I_I_to_I_S*x[('I', '(8, (9.0, 0.0))')]*18.371209614910647)-(beta_I_S_to_I_I*x[('I', '(8, (9.0, 0.0))')]*0.6720482064945359)
	dt_x[('I', '(9, (0.0, 9.0))')] = 0+(7.677131258858263*x[('S', '(9, (0.0, 9.0))')])-(1.4999999999999998*x[('I', '(9, (0.0, 9.0))')])+beta_I_I_to_I_S*(0.0+x[('I', '(9, (1.0, 8.0))')]*0.9999999999999998+x[('I', '(9, (0.0, 9.0))')]*1.5354262517716513)+beta_I_S_to_I_I*(0.0+x[('I', '(9, (0.0, 9.0))')]*25.807667078890848)-(beta_I_I_to_I_S*x[('I', '(9, (0.0, 9.0))')]*1.5354262517716513)-(beta_I_S_to_I_I*x[('I', '(9, (0.0, 9.0))')]*33.76592723897441)
	dt_x[('I', '(9, (1.0, 8.0))')] = 0+(26.73493846144291*x[('S', '(9, (1.0, 8.0))')])-(1.4999999999999987*x[('I', '(9, (1.0, 8.0))')])+beta_I_I_to_I_S*(0.0+x[('I', '(9, (1.0, 8.0))')]*4.220616920238374+x[('I', '(9, (2.0, 7.0))')]*2.1263707720502056)+beta_I_S_to_I_I*(0.0+x[('I', '(9, (0.0, 9.0))')]*8.963951640689727+x[('I', '(9, (1.0, 8.0))')]*22.023984859453183)-(beta_I_I_to_I_S*x[('I', '(9, (1.0, 8.0))')]*5.34698769228858)-(beta_I_S_to_I_I*x[('I', '(9, (1.0, 8.0))')]*29.987936500142908)
	dt_x[('I', '(9, (2.0, 7.0))')] = 0+(44.500833409328344*x[('S', '(9, (2.0, 7.0))')])-(1.5*x[('I', '(9, (2.0, 7.0))')])+beta_I_I_to_I_S*(0.0+x[('I', '(9, (2.0, 7.0))')]*6.741994977512063+x[('I', '(9, (3.0, 6.0))')]*3.1581717043536073)+beta_I_S_to_I_I*(0.0+x[('I', '(9, (1.0, 8.0))')]*8.083056497811581+x[('I', '(9, (2.0, 7.0))')]*19.27401828049455)-(beta_I_I_to_I_S*x[('I', '(9, (2.0, 7.0))')]*8.900166681865677)-(beta_I_S_to_I_I*x[('I', '(9, (2.0, 7.0))')]*26.357074778306135)
	dt_x[('I', '(9, (3.0, 6.0))')] = 0+(62.63149110875327*x[('S', '(9, (3.0, 6.0))')])-(1.5000000000000013*x[('I', '(9, (3.0, 6.0))')])+beta_I_I_to_I_S*(0.0+x[('I', '(9, (3.0, 6.0))')]*9.33612912977624+x[('I', '(9, (4.0, 5.0))')]*4.19016909197442)+beta_I_S_to_I_I*(0.0+x[('I', '(9, (3.0, 6.0))')]*16.861043538046893+x[('I', '(9, (2.0, 7.0))')]*7.154819316783131)-(beta_I_I_to_I_S*x[('I', '(9, (3.0, 6.0))')]*12.526298221750656)-(beta_I_S_to_I_I*x[('I', '(9, (3.0, 6.0))')]*23.015862854830033)
	dt_x[('I', '(9, (4.0, 5.0))')] = 0+(80.2372044285782*x[('S', '(9, (4.0, 5.0))')])-(1.5*x[('I', '(9, (4.0, 5.0))')])+beta_I_I_to_I_S*(0.0+x[('I', '(9, (4.0, 5.0))')]*12.06397108684129+x[('I', '(9, (5.0, 4.0))')]*4.983469798874344)+beta_I_S_to_I_I*(0.0+x[('I', '(9, (4.0, 5.0))')]*14.407910726446161+x[('I', '(9, (3.0, 6.0))')]*5.851204647777423)-(beta_I_I_to_I_S*x[('I', '(9, (4.0, 5.0))')]*16.04744088571564)-(beta_I_S_to_I_I*x[('I', '(9, (4.0, 5.0))')]*19.259115374223597)
	dt_x[('I', '(9, (5.0, 4.0))')] = 0+(98.23142385968686*x[('S', '(9, (5.0, 4.0))')])-(1.4999999999999998*x[('I', '(9, (5.0, 4.0))')])+beta_I_I_to_I_S*(0.0+x[('I', '(9, (5.0, 4.0))')]*14.218029539456621+x[('I', '(9, (6.0, 3.0))')]*6.428255232480757)+beta_I_S_to_I_I*(0.0+x[('I', '(9, (5.0, 4.0))')]*11.471579862327461+x[('I', '(9, (4.0, 5.0))')]*5.284185131227429)-(beta_I_I_to_I_S*x[('I', '(9, (5.0, 4.0))')]*19.646284771937367)-(beta_I_S_to_I_I*x[('I', '(9, (5.0, 4.0))')]*15.755764993554886)
	dt_x[('I', '(9, (6.0, 3.0))')] = 0+(115.70878462932666*x[('S', '(9, (6.0, 3.0))')])-(1.5000000000000002*x[('I', '(9, (6.0, 3.0))')])+beta_I_I_to_I_S*(0.0+x[('I', '(9, (6.0, 3.0))')]*16.81660266315536+x[('I', '(9, (7.0, 2.0))')]*7.32515426270996)+beta_I_S_to_I_I*(0.0+x[('I', '(9, (6.0, 3.0))')]*9.139482206578972+x[('I', '(9, (5.0, 4.0))')]*4.215472296137227)-(beta_I_I_to_I_S*x[('I', '(9, (6.0, 3.0))')]*23.14175692586532)-(beta_I_S_to_I_I*x[('I', '(9, (6.0, 3.0))')]*12.354954502716202)
	dt_x[('I', '(9, (7.0, 2.0))')] = 0+(132.72429383467409*x[('S', '(9, (7.0, 2.0))')])-(1.5*x[('I', '(9, (7.0, 2.0))')])+beta_I_I_to_I_S*(0.0+x[('I', '(9, (7.0, 2.0))')]*19.556181420793735+x[('I', '(9, (8.0, 1.0))')]*7.988677346141084)+beta_I_S_to_I_I*(0.0+x[('I', '(9, (7.0, 2.0))')]*6.69311400699774+x[('I', '(9, (6.0, 3.0))')]*3.0677713515953937)-(beta_I_I_to_I_S*x[('I', '(9, (7.0, 2.0))')]*26.544858766934823)-(beta_I_S_to_I_I*x[('I', '(9, (7.0, 2.0))')]*8.760885358593132)
	dt_x[('I', '(9, (8.0, 1.0))')] = 0+(150.496490710522*x[('S', '(9, (8.0, 1.0))')])-(1.5000000000000007*x[('I', '(9, (8.0, 1.0))')])+beta_I_I_to_I_S*(0.0+x[('I', '(9, (8.0, 1.0))')]*21.93592661073558+x[('I', '(9, (9.0, 0.0))')]*9.163371531368815)+beta_I_S_to_I_I*(0.0+x[('I', '(9, (8.0, 1.0))')]*4.074506195798495+x[('I', '(9, (7.0, 2.0))')]*2.1129888032275708)-(beta_I_I_to_I_S*x[('I', '(9, (8.0, 1.0))')]*30.099298142104388)-(beta_I_S_to_I_I*x[('I', '(9, (8.0, 1.0))')]*5.1874949990260655)
	dt_x[('I', '(9, (9.0, 0.0))')] = 0+(169.23255188437173*x[('S', '(9, (9.0, 0.0))')])-(1.4999999999999993*x[('I', '(9, (9.0, 0.0))')])+beta_I_I_to_I_S*(0.0+x[('I', '(9, (9.0, 0.0))')]*25.613389338463314)+beta_I_S_to_I_I*(0.0+x[('I', '(9, (9.0, 0.0))')]*1.476377208442726+x[('I', '(9, (8.0, 1.0))')]*1.0)-(beta_I_I_to_I_S*x[('I', '(9, (9.0, 0.0))')]*33.84651037687433)-(beta_I_S_to_I_I*x[('I', '(9, (9.0, 0.0))')]*1.4763772084427265)
	dt_x[('S', '(0, (0.0, 9.0))')] = 0+(1.5000000000000002*x[('I', '(0, (0.0, 9.0))')])-(0.0*x[('S', '(0, (0.0, 9.0))')])+beta_S_I_to_S_S*(0.0+x[('S', '(0, (9.0, 0.0))')]*0.9999999980000001)+beta_S_S_to_S_I*(0.0)-(beta_S_I_to_S_S*x[('S', '(0, (0.0, 9.0))')]*0.0)-(beta_S_S_to_S_I*x[('S', '(0, (0.0, 9.0))')]*0.9999999980000001)
	dt_x[('S', '(0, (9.0, 0.0))')] = 0+(1.5*x[('I', '(0, (9.0, 0.0))')])-(5.0*x[('S', '(0, (9.0, 0.0))')])+beta_S_I_to_S_S*(0.0)+beta_S_S_to_S_I*(0.0+x[('S', '(0, (0.0, 9.0))')]*1.0)-(beta_S_I_to_S_S*x[('S', '(0, (9.0, 0.0))')]*1.0)-(beta_S_S_to_S_I*x[('S', '(0, (9.0, 0.0))')]*0.0)
	dt_x[('S', '(1, (0.0, 9.0))')] = 0+(1.5*x[('I', '(1, (0.0, 9.0))')])-(0.0*x[('S', '(1, (0.0, 9.0))')])+beta_S_I_to_S_S*(0.0+x[('S', '(1, (4.0, 5.0))')]*1.0)+beta_S_S_to_S_I*(0.0)-(beta_S_I_to_S_S*x[('S', '(1, (0.0, 9.0))')]*0.0)-(beta_S_S_to_S_I*x[('S', '(1, (0.0, 9.0))')]*2.0)
	dt_x[('S', '(1, (4.0, 5.0))')] = 0+(1.5*x[('I', '(1, (4.0, 5.0))')])-(5.0*x[('S', '(1, (4.0, 5.0))')])+beta_S_I_to_S_S*(0.0+x[('S', '(1, (9.0, 0.0))')]*2.0)+beta_S_S_to_S_I*(0.0+x[('S', '(1, (0.0, 9.0))')]*2.0)-(beta_S_I_to_S_S*x[('S', '(1, (4.0, 5.0))')]*1.0)-(beta_S_S_to_S_I*x[('S', '(1, (4.0, 5.0))')]*1.0)
	dt_x[('S', '(1, (9.0, 0.0))')] = 0+(1.5*x[('I', '(1, (9.0, 0.0))')])-(10.0*x[('S', '(1, (9.0, 0.0))')])+beta_S_I_to_S_S*(0.0)+beta_S_S_to_S_I*(0.0+x[('S', '(1, (4.0, 5.0))')]*1.0)-(beta_S_I_to_S_S*x[('S', '(1, (9.0, 0.0))')]*2.0)-(beta_S_S_to_S_I*x[('S', '(1, (9.0, 0.0))')]*0.0)
	dt_x[('S', '(2, (0.0, 9.0))')] = 0+(1.5*x[('I', '(2, (0.0, 9.0))')])-(0.0*x[('S', '(2, (0.0, 9.0))')])+beta_S_I_to_S_S*(0.0+x[('S', '(2, (3.0, 6.0))')]*1.0)+beta_S_S_to_S_I*(0.0)-(beta_S_I_to_S_S*x[('S', '(2, (0.0, 9.0))')]*0.0)-(beta_S_S_to_S_I*x[('S', '(2, (0.0, 9.0))')]*3.0)
	dt_x[('S', '(2, (3.0, 6.0))')] = 0+(1.5*x[('I', '(2, (3.0, 6.0))')])-(5.0*x[('S', '(2, (3.0, 6.0))')])+beta_S_I_to_S_S*(0.0+x[('S', '(2, (6.0, 3.0))')]*2.0)+beta_S_S_to_S_I*(0.0+x[('S', '(2, (0.0, 9.0))')]*3.0)-(beta_S_I_to_S_S*x[('S', '(2, (3.0, 6.0))')]*1.0)-(beta_S_S_to_S_I*x[('S', '(2, (3.0, 6.0))')]*2.0)
	dt_x[('S', '(2, (6.0, 3.0))')] = 0+(1.5*x[('I', '(2, (6.0, 3.0))')])-(10.0*x[('S', '(2, (6.0, 3.0))')])+beta_S_I_to_S_S*(0.0+x[('S', '(2, (9.0, 0.0))')]*3.0)+beta_S_S_to_S_I*(0.0+x[('S', '(2, (3.0, 6.0))')]*2.0)-(beta_S_I_to_S_S*x[('S', '(2, (6.0, 3.0))')]*2.0)-(beta_S_S_to_S_I*x[('S', '(2, (6.0, 3.0))')]*1.0)
	dt_x[('S', '(2, (9.0, 0.0))')] = 0+(1.5*x[('I', '(2, (9.0, 0.0))')])-(15.0*x[('S', '(2, (9.0, 0.0))')])+beta_S_I_to_S_S*(0.0)+beta_S_S_to_S_I*(0.0+x[('S', '(2, (6.0, 3.0))')]*1.0)-(beta_S_I_to_S_S*x[('S', '(2, (9.0, 0.0))')]*3.0)-(beta_S_S_to_S_I*x[('S', '(2, (9.0, 0.0))')]*0.0)
	dt_x[('S', '(3, (0.0, 9.0))')] = 0+(1.5*x[('I', '(3, (0.0, 9.0))')])-(0.0*x[('S', '(3, (0.0, 9.0))')])+beta_S_I_to_S_S*(0.0+x[('S', '(3, (2.0, 7.0))')]*1.0)+beta_S_S_to_S_I*(0.0)-(beta_S_I_to_S_S*x[('S', '(3, (0.0, 9.0))')]*0.0)-(beta_S_S_to_S_I*x[('S', '(3, (0.0, 9.0))')]*4.0)
	dt_x[('S', '(3, (2.0, 7.0))')] = 0+(1.5*x[('I', '(3, (2.0, 7.0))')])-(5.0*x[('S', '(3, (2.0, 7.0))')])+beta_S_I_to_S_S*(0.0+x[('S', '(3, (4.0, 5.0))')]*2.0)+beta_S_S_to_S_I*(0.0+x[('S', '(3, (0.0, 9.0))')]*4.0)-(beta_S_I_to_S_S*x[('S', '(3, (2.0, 7.0))')]*1.0)-(beta_S_S_to_S_I*x[('S', '(3, (2.0, 7.0))')]*3.0)
	dt_x[('S', '(3, (4.0, 5.0))')] = 0+(1.5*x[('I', '(3, (4.0, 5.0))')])-(10.0*x[('S', '(3, (4.0, 5.0))')])+beta_S_I_to_S_S*(0.0+x[('S', '(3, (7.0, 2.0))')]*3.0)+beta_S_S_to_S_I*(0.0+x[('S', '(3, (2.0, 7.0))')]*3.0)-(beta_S_I_to_S_S*x[('S', '(3, (4.0, 5.0))')]*2.0)-(beta_S_S_to_S_I*x[('S', '(3, (4.0, 5.0))')]*2.0)
	dt_x[('S', '(3, (7.0, 2.0))')] = 0+(1.5*x[('I', '(3, (7.0, 2.0))')])-(15.0*x[('S', '(3, (7.0, 2.0))')])+beta_S_I_to_S_S*(0.0+x[('S', '(3, (9.0, 0.0))')]*4.0)+beta_S_S_to_S_I*(0.0+x[('S', '(3, (4.0, 5.0))')]*2.0)-(beta_S_I_to_S_S*x[('S', '(3, (7.0, 2.0))')]*3.0)-(beta_S_S_to_S_I*x[('S', '(3, (7.0, 2.0))')]*1.0)
	dt_x[('S', '(3, (9.0, 0.0))')] = 0+(1.5*x[('I', '(3, (9.0, 0.0))')])-(20.0*x[('S', '(3, (9.0, 0.0))')])+beta_S_I_to_S_S*(0.0)+beta_S_S_to_S_I*(0.0+x[('S', '(3, (7.0, 2.0))')]*1.0)-(beta_S_I_to_S_S*x[('S', '(3, (9.0, 0.0))')]*4.0)-(beta_S_S_to_S_I*x[('S', '(3, (9.0, 0.0))')]*0.0)
	dt_x[('S', '(4, (0.0, 9.0))')] = 0+(1.5*x[('I', '(4, (0.0, 9.0))')])-(0.0*x[('S', '(4, (0.0, 9.0))')])+beta_S_I_to_S_S*(0.0+x[('S', '(4, (1.0, 8.0))')]*1.0)+beta_S_S_to_S_I*(0.0)-(beta_S_I_to_S_S*x[('S', '(4, (0.0, 9.0))')]*0.0)-(beta_S_S_to_S_I*x[('S', '(4, (0.0, 9.0))')]*5.35206956077279)
	dt_x[('S', '(4, (1.0, 8.0))')] = 0+(1.5*x[('I', '(4, (1.0, 8.0))')])-(5.0*x[('S', '(4, (1.0, 8.0))')])+beta_S_I_to_S_S*(0.0+x[('S', '(4, (3.0, 6.0))')]*2.0)+beta_S_S_to_S_I*(0.0+x[('S', '(4, (0.0, 9.0))')]*5.35206956077279)-(beta_S_I_to_S_S*x[('S', '(4, (1.0, 8.0))')]*1.0)-(beta_S_S_to_S_I*x[('S', '(4, (1.0, 8.0))')]*4.35206956077279)
	dt_x[('S', '(4, (3.0, 6.0))')] = 0+(1.5*x[('I', '(4, (3.0, 6.0))')])-(10.0*x[('S', '(4, (3.0, 6.0))')])+beta_S_I_to_S_S*(0.0+x[('S', '(4, (5.0, 4.0))')]*1.9437913176816286+x[('S', '(4, (4.0, 5.0))')]*1.0562086823183714)+beta_S_S_to_S_I*(0.0+x[('S', '(4, (1.0, 8.0))')]*4.35206956077279)-(beta_S_I_to_S_S*x[('S', '(4, (3.0, 6.0))')]*2.0)-(beta_S_S_to_S_I*x[('S', '(4, (3.0, 6.0))')]*3.35206956077279)
	dt_x[('S', '(4, (4.0, 5.0))')] = 0+(1.5*x[('I', '(4, (4.0, 5.0))')])-(15.0*x[('S', '(4, (4.0, 5.0))')])+beta_S_I_to_S_S*(0.0+x[('S', '(4, (6.0, 3.0))')]*4.0)+beta_S_S_to_S_I*(0.0+x[('S', '(4, (3.0, 6.0))')]*4.0)-(beta_S_I_to_S_S*x[('S', '(4, (4.0, 5.0))')]*3.0)-(beta_S_S_to_S_I*x[('S', '(4, (4.0, 5.0))')]*3.0)
	dt_x[('S', '(4, (5.0, 4.0))')] = 0+(1.5*x[('I', '(4, (5.0, 4.0))')])-(15.0*x[('S', '(4, (5.0, 4.0))')])+beta_S_I_to_S_S*(0.0+x[('S', '(4, (7.0, 2.0))')]*4.0)+beta_S_S_to_S_I*(0.0+x[('S', '(4, (3.0, 6.0))')]*3.0)-(beta_S_I_to_S_S*x[('S', '(4, (5.0, 4.0))')]*3.0)-(beta_S_S_to_S_I*x[('S', '(4, (5.0, 4.0))')]*2.0)
	dt_x[('S', '(4, (6.0, 3.0))')] = 0+(1.5*x[('I', '(4, (6.0, 3.0))')])-(20.0*x[('S', '(4, (6.0, 3.0))')])+beta_S_I_to_S_S*(0.0+x[('S', '(4, (8.0, 1.0))')]*5.0)+beta_S_S_to_S_I*(0.0+x[('S', '(4, (4.0, 5.0))')]*3.0)-(beta_S_I_to_S_S*x[('S', '(4, (6.0, 3.0))')]*4.0)-(beta_S_S_to_S_I*x[('S', '(4, (6.0, 3.0))')]*2.0)
	dt_x[('S', '(4, (7.0, 2.0))')] = 0+(1.5*x[('I', '(4, (7.0, 2.0))')])-(20.0*x[('S', '(4, (7.0, 2.0))')])+beta_S_I_to_S_S*(0.0+x[('S', '(4, (9.0, 0.0))')]*5.0)+beta_S_S_to_S_I*(0.0+x[('S', '(4, (5.0, 4.0))')]*2.0)-(beta_S_I_to_S_S*x[('S', '(4, (7.0, 2.0))')]*4.0)-(beta_S_S_to_S_I*x[('S', '(4, (7.0, 2.0))')]*1.0)
	dt_x[('S', '(4, (8.0, 1.0))')] = 0+(1.5*x[('I', '(4, (8.0, 1.0))')])-(25.0*x[('S', '(4, (8.0, 1.0))')])+beta_S_I_to_S_S*(0.0+x[('S', '(4, (9.0, 0.0))')]*6.0)+beta_S_S_to_S_I*(0.0+x[('S', '(4, (6.0, 3.0))')]*2.0)-(beta_S_I_to_S_S*x[('S', '(4, (8.0, 1.0))')]*5.0)-(beta_S_S_to_S_I*x[('S', '(4, (8.0, 1.0))')]*1.0)
	dt_x[('S', '(4, (9.0, 0.0))')] = 0+(1.5*x[('I', '(4, (9.0, 0.0))')])-(26.76034780386395*x[('S', '(4, (9.0, 0.0))')])+beta_S_I_to_S_S*(0.0)+beta_S_S_to_S_I*(0.0+x[('S', '(4, (8.0, 1.0))')]*0.35206956077279045+x[('S', '(4, (7.0, 2.0))')]*0.6479304392272095)-(beta_S_I_to_S_S*x[('S', '(4, (9.0, 0.0))')]*5.35206956077279)-(beta_S_S_to_S_I*x[('S', '(4, (9.0, 0.0))')]*0.0)
	dt_x[('S', '(5, (0.0, 9.0))')] = 0+(1.5*x[('I', '(5, (0.0, 9.0))')])-(0.0*x[('S', '(5, (0.0, 9.0))')])+beta_S_I_to_S_S*(0.0+x[('S', '(5, (1.0, 8.0))')]*1.0)+beta_S_S_to_S_I*(0.0)-(beta_S_I_to_S_S*x[('S', '(5, (0.0, 9.0))')]*0.0)-(beta_S_S_to_S_I*x[('S', '(5, (0.0, 9.0))')]*7.388977681778915)
	dt_x[('S', '(5, (1.0, 8.0))')] = 0+(1.5*x[('I', '(5, (1.0, 8.0))')])-(5.0*x[('S', '(5, (1.0, 8.0))')])+beta_S_I_to_S_S*(0.0+x[('S', '(5, (2.0, 7.0))')]*2.0)+beta_S_S_to_S_I*(0.0+x[('S', '(5, (0.0, 9.0))')]*7.388977681778915)-(beta_S_I_to_S_S*x[('S', '(5, (1.0, 8.0))')]*1.0)-(beta_S_S_to_S_I*x[('S', '(5, (1.0, 8.0))')]*6.388977681778915)
	dt_x[('S', '(5, (2.0, 7.0))')] = 0+(1.5*x[('I', '(5, (2.0, 7.0))')])-(10.0*x[('S', '(5, (2.0, 7.0))')])+beta_S_I_to_S_S*(0.0+x[('S', '(5, (3.0, 6.0))')]*1.166933045336744+x[('S', '(5, (4.0, 5.0))')]*1.833066954663256)+beta_S_S_to_S_I*(0.0+x[('S', '(5, (1.0, 8.0))')]*6.388977681778915)-(beta_S_I_to_S_S*x[('S', '(5, (2.0, 7.0))')]*2.0)-(beta_S_S_to_S_I*x[('S', '(5, (2.0, 7.0))')]*5.388977681778915)
	dt_x[('S', '(5, (3.0, 6.0))')] = 0+(1.5*x[('I', '(5, (3.0, 6.0))')])-(15.0*x[('S', '(5, (3.0, 6.0))')])+beta_S_I_to_S_S*(0.0+x[('S', '(5, (4.0, 5.0))')]*4.0)+beta_S_S_to_S_I*(0.0+x[('S', '(5, (2.0, 7.0))')]*6.0)-(beta_S_I_to_S_S*x[('S', '(5, (3.0, 6.0))')]*3.0)-(beta_S_S_to_S_I*x[('S', '(5, (3.0, 6.0))')]*5.0)
	dt_x[('S', '(5, (4.0, 5.0))')] = 0+(1.5*x[('I', '(5, (4.0, 5.0))')])-(16.944888408894574*x[('S', '(5, (4.0, 5.0))')])+beta_S_I_to_S_S*(0.0+x[('S', '(5, (5.0, 4.0))')]*2.4440892728843413+x[('S', '(5, (6.0, 3.0))')]*1.9448884088945735)+beta_S_S_to_S_I*(0.0+x[('S', '(5, (2.0, 7.0))')]*3.0551115911054265+x[('S', '(5, (3.0, 6.0))')]*1.9448884088945735)-(beta_S_I_to_S_S*x[('S', '(5, (4.0, 5.0))')]*3.388977681778915)-(beta_S_S_to_S_I*x[('S', '(5, (4.0, 5.0))')]*4.0)
	dt_x[('S', '(5, (5.0, 4.0))')] = 0+(1.5*x[('I', '(5, (5.0, 4.0))')])-(20.0*x[('S', '(5, (5.0, 4.0))')])+beta_S_I_to_S_S*(0.0+x[('S', '(5, (7.0, 2.0))')]*5.0)+beta_S_S_to_S_I*(0.0+x[('S', '(5, (4.0, 5.0))')]*4.0)-(beta_S_I_to_S_S*x[('S', '(5, (5.0, 4.0))')]*4.0)-(beta_S_S_to_S_I*x[('S', '(5, (5.0, 4.0))')]*3.0)
	dt_x[('S', '(5, (6.0, 3.0))')] = 0+(1.5*x[('I', '(5, (6.0, 3.0))')])-(25.0*x[('S', '(5, (6.0, 3.0))')])+beta_S_I_to_S_S*(0.0+x[('S', '(5, (7.0, 2.0))')]*6.0)+beta_S_S_to_S_I*(0.0+x[('S', '(5, (4.0, 5.0))')]*4.0)-(beta_S_I_to_S_S*x[('S', '(5, (6.0, 3.0))')]*5.0)-(beta_S_S_to_S_I*x[('S', '(5, (6.0, 3.0))')]*3.0)
	dt_x[('S', '(5, (7.0, 2.0))')] = 0+(1.5*x[('I', '(5, (7.0, 2.0))')])-(26.944888408894574*x[('S', '(5, (7.0, 2.0))')])+beta_S_I_to_S_S*(0.0+x[('S', '(5, (8.0, 1.0))')]*6.388977681778915)+beta_S_S_to_S_I*(0.0+x[('S', '(5, (5.0, 4.0))')]*1.833066954663256+x[('S', '(5, (6.0, 3.0))')]*1.166933045336744)-(beta_S_I_to_S_S*x[('S', '(5, (7.0, 2.0))')]*5.388977681778915)-(beta_S_S_to_S_I*x[('S', '(5, (7.0, 2.0))')]*2.0)
	dt_x[('S', '(5, (8.0, 1.0))')] = 0+(1.5*x[('I', '(5, (8.0, 1.0))')])-(31.944888408894574*x[('S', '(5, (8.0, 1.0))')])+beta_S_I_to_S_S*(0.0+x[('S', '(5, (9.0, 0.0))')]*7.388977681778915)+beta_S_S_to_S_I*(0.0+x[('S', '(5, (7.0, 2.0))')]*2.0)-(beta_S_I_to_S_S*x[('S', '(5, (8.0, 1.0))')]*6.388977681778915)-(beta_S_S_to_S_I*x[('S', '(5, (8.0, 1.0))')]*1.0)
	dt_x[('S', '(5, (9.0, 0.0))')] = 0+(1.5*x[('I', '(5, (9.0, 0.0))')])-(36.94488840889457*x[('S', '(5, (9.0, 0.0))')])+beta_S_I_to_S_S*(0.0)+beta_S_S_to_S_I*(0.0+x[('S', '(5, (8.0, 1.0))')]*1.0)-(beta_S_I_to_S_S*x[('S', '(5, (9.0, 0.0))')]*7.388977681778915)-(beta_S_S_to_S_I*x[('S', '(5, (9.0, 0.0))')]*0.0)
	dt_x[('S', '(6, (0.0, 9.0))')] = 0+(1.5*x[('I', '(6, (0.0, 9.0))')])-(1.4570956519193035*x[('S', '(6, (0.0, 9.0))')])+beta_S_I_to_S_S*(0.0+x[('S', '(6, (1.0, 8.0))')]*1.0+x[('S', '(6, (0.0, 9.0))')]*0.2914191303838607)+beta_S_S_to_S_I*(0.0+x[('S', '(6, (0.0, 9.0))')]*2.914191303838607)-(beta_S_I_to_S_S*x[('S', '(6, (0.0, 9.0))')]*0.2914191303838607)-(beta_S_S_to_S_I*x[('S', '(6, (0.0, 9.0))')]*9.291419130383861)
	dt_x[('S', '(6, (1.0, 8.0))')] = 0+(1.5*x[('I', '(6, (1.0, 8.0))')])-(7.0563575936063*x[('S', '(6, (1.0, 8.0))')])+beta_S_I_to_S_S*(0.0+x[('S', '(6, (2.0, 7.0))')]*2.41127151872126)+beta_S_S_to_S_I*(0.0+x[('S', '(6, (0.0, 9.0))')]*9.0)-(beta_S_I_to_S_S*x[('S', '(6, (1.0, 8.0))')]*1.4112715187212599)-(beta_S_S_to_S_I*x[('S', '(6, (1.0, 8.0))')]*8.0)
	dt_x[('S', '(6, (2.0, 7.0))')] = 0+(1.5*x[('I', '(6, (2.0, 7.0))')])-(12.0563575936063*x[('S', '(6, (2.0, 7.0))')])+beta_S_I_to_S_S*(0.0+x[('S', '(6, (3.0, 6.0))')]*3.41127151872126)+beta_S_S_to_S_I*(0.0+x[('S', '(6, (1.0, 8.0))')]*8.0)-(beta_S_I_to_S_S*x[('S', '(6, (2.0, 7.0))')]*2.41127151872126)-(beta_S_S_to_S_I*x[('S', '(6, (2.0, 7.0))')]*7.0)
	dt_x[('S', '(6, (3.0, 6.0))')] = 0+(1.5*x[('I', '(6, (3.0, 6.0))')])-(17.0563575936063*x[('S', '(6, (3.0, 6.0))')])+beta_S_I_to_S_S*(0.0+x[('S', '(6, (4.0, 5.0))')]*4.41127151872126)+beta_S_S_to_S_I*(0.0+x[('S', '(6, (2.0, 7.0))')]*7.0)-(beta_S_I_to_S_S*x[('S', '(6, (3.0, 6.0))')]*3.41127151872126)-(beta_S_S_to_S_I*x[('S', '(6, (3.0, 6.0))')]*6.0)
	dt_x[('S', '(6, (4.0, 5.0))')] = 0+(1.5*x[('I', '(6, (4.0, 5.0))')])-(22.0563575936063*x[('S', '(6, (4.0, 5.0))')])+beta_S_I_to_S_S*(0.0+x[('S', '(6, (5.0, 4.0))')]*5.411271518721261)+beta_S_S_to_S_I*(0.0+x[('S', '(6, (3.0, 6.0))')]*6.0)-(beta_S_I_to_S_S*x[('S', '(6, (4.0, 5.0))')]*4.41127151872126)-(beta_S_S_to_S_I*x[('S', '(6, (4.0, 5.0))')]*5.0)
	dt_x[('S', '(6, (5.0, 4.0))')] = 0+(1.5*x[('I', '(6, (5.0, 4.0))')])-(27.0563575936063*x[('S', '(6, (5.0, 4.0))')])+beta_S_I_to_S_S*(0.0+x[('S', '(6, (6.0, 3.0))')]*6.41127151872126)+beta_S_S_to_S_I*(0.0+x[('S', '(6, (4.0, 5.0))')]*5.0)-(beta_S_I_to_S_S*x[('S', '(6, (5.0, 4.0))')]*5.411271518721261)-(beta_S_S_to_S_I*x[('S', '(6, (5.0, 4.0))')]*4.0)
	dt_x[('S', '(6, (6.0, 3.0))')] = 0+(1.5*x[('I', '(6, (6.0, 3.0))')])-(32.0563575936063*x[('S', '(6, (6.0, 3.0))')])+beta_S_I_to_S_S*(0.0+x[('S', '(6, (7.0, 2.0))')]*7.41127151872126)+beta_S_S_to_S_I*(0.0+x[('S', '(6, (5.0, 4.0))')]*4.0)-(beta_S_I_to_S_S*x[('S', '(6, (6.0, 3.0))')]*6.41127151872126)-(beta_S_S_to_S_I*x[('S', '(6, (6.0, 3.0))')]*3.0)
	dt_x[('S', '(6, (7.0, 2.0))')] = 0+(1.5*x[('I', '(6, (7.0, 2.0))')])-(37.0563575936063*x[('S', '(6, (7.0, 2.0))')])+beta_S_I_to_S_S*(0.0+x[('S', '(6, (8.0, 1.0))')]*8.41127151872126)+beta_S_S_to_S_I*(0.0+x[('S', '(6, (6.0, 3.0))')]*3.0)-(beta_S_I_to_S_S*x[('S', '(6, (7.0, 2.0))')]*7.41127151872126)-(beta_S_S_to_S_I*x[('S', '(6, (7.0, 2.0))')]*2.0)
	dt_x[('S', '(6, (8.0, 1.0))')] = 0+(1.5*x[('I', '(6, (8.0, 1.0))')])-(42.0563575936063*x[('S', '(6, (8.0, 1.0))')])+beta_S_I_to_S_S*(0.0+x[('S', '(6, (9.0, 0.0))')]*9.41127151872126)+beta_S_S_to_S_I*(0.0+x[('S', '(6, (7.0, 2.0))')]*2.0)-(beta_S_I_to_S_S*x[('S', '(6, (8.0, 1.0))')]*8.41127151872126)-(beta_S_S_to_S_I*x[('S', '(6, (8.0, 1.0))')]*1.0)
	dt_x[('S', '(6, (9.0, 0.0))')] = 0+(1.5*x[('I', '(6, (9.0, 0.0))')])-(47.0563575936063*x[('S', '(6, (9.0, 0.0))')])+beta_S_I_to_S_S*(0.0)+beta_S_S_to_S_I*(0.0+x[('S', '(6, (8.0, 1.0))')]*1.0)-(beta_S_I_to_S_S*x[('S', '(6, (9.0, 0.0))')]*9.41127151872126)-(beta_S_S_to_S_I*x[('S', '(6, (9.0, 0.0))')]*0.0)
	dt_x[('S', '(7, (0.0, 9.0))')] = 0+(1.5*x[('I', '(7, (0.0, 9.0))')])-(2.5*x[('S', '(7, (0.0, 9.0))')])+beta_S_I_to_S_S*(0.0+x[('S', '(7, (0.0, 9.0))')]*0.5+x[('S', '(7, (1.0, 8.0))')]*1.0)+beta_S_S_to_S_I*(0.0+x[('S', '(7, (0.0, 9.0))')]*6.080160625789951)-(beta_S_I_to_S_S*x[('S', '(7, (0.0, 9.0))')]*0.5)-(beta_S_S_to_S_I*x[('S', '(7, (0.0, 9.0))')]*11.660321251579903)
	dt_x[('S', '(7, (1.0, 8.0))')] = 0+(1.5000000000000002*x[('I', '(7, (1.0, 8.0))')])-(10.0*x[('S', '(7, (1.0, 8.0))')])+beta_S_I_to_S_S*(0.0+x[('S', '(7, (2.0, 7.0))')]*3.0000000000000004)+beta_S_S_to_S_I*(0.0+x[('S', '(7, (0.0, 9.0))')]*11.160321251579903)-(beta_S_I_to_S_S*x[('S', '(7, (1.0, 8.0))')]*2.0)-(beta_S_S_to_S_I*x[('S', '(7, (1.0, 8.0))')]*10.160321251579903)
	dt_x[('S', '(7, (2.0, 7.0))')] = 0+(1.5*x[('I', '(7, (2.0, 7.0))')])-(15.687745290951407*x[('S', '(7, (2.0, 7.0))')])+beta_S_I_to_S_S*(0.0+x[('S', '(7, (2.0, 7.0))')]*0.5501962327611258+x[('S', '(7, (3.0, 6.0))')]*3.5873528254291553)+beta_S_S_to_S_I*(0.0+x[('S', '(7, (1.0, 8.0))')]*8.762778632514387+x[('S', '(7, (2.0, 7.0))')]*1.513039640093096)-(beta_S_I_to_S_S*x[('S', '(7, (2.0, 7.0))')]*3.137549058190282)-(beta_S_S_to_S_I*x[('S', '(7, (2.0, 7.0))')]*9.275818272607482)
	dt_x[('S', '(7, (3.0, 6.0))')] = 0+(1.4999999999999996*x[('I', '(7, (3.0, 6.0))')])-(21.514297919553638*x[('S', '(7, (3.0, 6.0))')])+beta_S_I_to_S_S*(0.0+x[('S', '(7, (4.0, 5.0))')]*4.449968468686773+x[('S', '(7, (3.0, 6.0))')]*0.8528911152239544)+beta_S_S_to_S_I*(0.0+x[('S', '(7, (2.0, 7.0))')]*7.465488569100031+x[('S', '(7, (3.0, 6.0))')]*1.5352040074031181)-(beta_S_I_to_S_S*x[('S', '(7, (3.0, 6.0))')]*4.3028595839107275)-(beta_S_S_to_S_I*x[('S', '(7, (3.0, 6.0))')]*8.000692576503148)
	dt_x[('S', '(7, (4.0, 5.0))')] = 0+(1.5000000000000002*x[('I', '(7, (4.0, 5.0))')])-(28.33790831510062*x[('S', '(7, (4.0, 5.0))')])+beta_S_I_to_S_S*(0.0+x[('S', '(7, (5.0, 4.0))')]*4.751770304938102+x[('S', '(7, (4.0, 5.0))')]*1.9158113580820224)+beta_S_S_to_S_I*(0.0+x[('S', '(7, (4.0, 5.0))')]*2.21652550584589+x[('S', '(7, (3.0, 6.0))')]*5.451056157174234)-(beta_S_I_to_S_S*x[('S', '(7, (4.0, 5.0))')]*5.6675816630201235)-(beta_S_S_to_S_I*x[('S', '(7, (4.0, 5.0))')]*6.6675816630201235)
	dt_x[('S', '(7, (5.0, 4.0))')] = 0+(1.4999999999999998*x[('I', '(7, (5.0, 4.0))')])-(33.97587903246712*x[('S', '(7, (5.0, 4.0))')])+beta_S_I_to_S_S*(0.0+x[('S', '(7, (6.0, 3.0))')]*7.795175806493424)+beta_S_S_to_S_I*(0.0+x[('S', '(7, (4.0, 5.0))')]*6.365145445086479)-(beta_S_I_to_S_S*x[('S', '(7, (5.0, 4.0))')]*6.795175806493424)-(beta_S_S_to_S_I*x[('S', '(7, (5.0, 4.0))')]*5.365145445086478)
	dt_x[('S', '(7, (6.0, 3.0))')] = 0+(1.4999999999999996*x[('I', '(7, (6.0, 3.0))')])-(40.00346288251574*x[('S', '(7, (6.0, 3.0))')])+beta_S_I_to_S_S*(0.0+x[('S', '(7, (7.0, 2.0))')]*7.465488569100031+x[('S', '(7, (6.0, 3.0))')]*1.5352040074031181)+beta_S_S_to_S_I*(0.0+x[('S', '(7, (5.0, 4.0))')]*4.449968468686773+x[('S', '(7, (6.0, 3.0))')]*0.8528911152239544)-(beta_S_I_to_S_S*x[('S', '(7, (6.0, 3.0))')]*8.000692576503148)-(beta_S_S_to_S_I*x[('S', '(7, (6.0, 3.0))')]*4.3028595839107275)
	dt_x[('S', '(7, (7.0, 2.0))')] = 0+(1.5*x[('I', '(7, (7.0, 2.0))')])-(46.37909136303741*x[('S', '(7, (7.0, 2.0))')])+beta_S_I_to_S_S*(0.0+x[('S', '(7, (8.0, 1.0))')]*8.762778632514387+x[('S', '(7, (7.0, 2.0))')]*1.513039640093096)+beta_S_S_to_S_I*(0.0+x[('S', '(7, (7.0, 2.0))')]*0.5501962327611258+x[('S', '(7, (6.0, 3.0))')]*3.5873528254291553)-(beta_S_I_to_S_S*x[('S', '(7, (7.0, 2.0))')]*9.275818272607482)-(beta_S_S_to_S_I*x[('S', '(7, (7.0, 2.0))')]*3.137549058190282)
	dt_x[('S', '(7, (8.0, 1.0))')] = 0+(1.5*x[('I', '(7, (8.0, 1.0))')])-(50.801606257899515*x[('S', '(7, (8.0, 1.0))')])+beta_S_I_to_S_S*(0.0+x[('S', '(7, (9.0, 0.0))')]*11.160321251579903)+beta_S_S_to_S_I*(0.0+x[('S', '(7, (7.0, 2.0))')]*3.0)-(beta_S_I_to_S_S*x[('S', '(7, (8.0, 1.0))')]*10.160321251579903)-(beta_S_S_to_S_I*x[('S', '(7, (8.0, 1.0))')]*2.0)
	dt_x[('S', '(7, (9.0, 0.0))')] = 0+(1.4999999999999998*x[('I', '(7, (9.0, 0.0))')])-(58.301606257899515*x[('S', '(7, (9.0, 0.0))')])+beta_S_I_to_S_S*(0.0+x[('S', '(7, (9.0, 0.0))')]*6.080160625789952)+beta_S_S_to_S_I*(0.0+x[('S', '(7, (9.0, 0.0))')]*0.5+x[('S', '(7, (8.0, 1.0))')]*1.0)-(beta_S_I_to_S_S*x[('S', '(7, (9.0, 0.0))')]*11.660321251579903)-(beta_S_S_to_S_I*x[('S', '(7, (9.0, 0.0))')]*0.5)
	dt_x[('S', '(8, (0.0, 9.0))')] = 0+(1.5000000000000004*x[('I', '(8, (0.0, 9.0))')])-(3.566373981653956*x[('S', '(8, (0.0, 9.0))')])+beta_S_I_to_S_S*(0.0+x[('S', '(8, (0.0, 9.0))')]*0.713274796330791+x[('S', '(8, (1.0, 8.0))')]*1.0)+beta_S_S_to_S_I*(0.0+x[('S', '(8, (0.0, 9.0))')]*10.986853034791995)-(beta_S_I_to_S_S*x[('S', '(8, (0.0, 9.0))')]*0.713274796330791)-(beta_S_S_to_S_I*x[('S', '(8, (0.0, 9.0))')]*18.359685321173462)
	dt_x[('S', '(8, (1.0, 8.0))')] = 0+(1.4999999999999998*x[('I', '(8, (1.0, 8.0))')])-(14.486990467326825*x[('S', '(8, (1.0, 8.0))')])+beta_S_I_to_S_S*(0.0+x[('S', '(8, (2.0, 7.0))')]*2.130324413508297+x[('S', '(8, (1.0, 8.0))')]*1.767073679957068)+beta_S_S_to_S_I*(0.0+x[('S', '(8, (1.0, 8.0))')]*8.501214244317705+x[('S', '(8, (0.0, 9.0))')]*8.333692329999165)-(beta_S_I_to_S_S*x[('S', '(8, (1.0, 8.0))')]*2.897398093465365)-(beta_S_S_to_S_I*x[('S', '(8, (1.0, 8.0))')]*15.83490657431687)
	dt_x[('S', '(8, (2.0, 7.0))')] = 0+(1.4999999999999996*x[('I', '(8, (2.0, 7.0))')])-(24.60130089588516*x[('S', '(8, (2.0, 7.0))')])+beta_S_I_to_S_S*(0.0+x[('S', '(8, (2.0, 7.0))')]*2.316033112867594+x[('S', '(8, (3.0, 6.0))')]*3.604227066309438)+beta_S_S_to_S_I*(0.0+x[('S', '(8, (1.0, 8.0))')]*8.965113454395176+x[('S', '(8, (2.0, 7.0))')]*6.401416962221666)-(beta_S_I_to_S_S*x[('S', '(8, (2.0, 7.0))')]*4.920260179177032)-(beta_S_S_to_S_I*x[('S', '(8, (2.0, 7.0))')]*14.366530416616843)
	dt_x[('S', '(8, (3.0, 6.0))')] = 0+(1.4999999999999998*x[('I', '(8, (3.0, 6.0))')])-(33.58722309998906*x[('S', '(8, (3.0, 6.0))')])+beta_S_I_to_S_S*(0.0+x[('S', '(8, (3.0, 6.0))')]*3.6468526863303192+x[('S', '(8, (4.0, 5.0))')]*4.070591933667493)+beta_S_S_to_S_I*(0.0+x[('S', '(8, (2.0, 7.0))')]*6.785813622130007+x[('S', '(8, (3.0, 6.0))')]*6.436156704175004)-(beta_S_I_to_S_S*x[('S', '(8, (3.0, 6.0))')]*6.717444619997812)-(beta_S_S_to_S_I*x[('S', '(8, (3.0, 6.0))')]*12.22197032630501)
	dt_x[('S', '(8, (4.0, 5.0))')] = 0+(1.5000000000000002*x[('I', '(8, (4.0, 5.0))')])-(44.10594057327114*x[('S', '(8, (4.0, 5.0))')])+beta_S_I_to_S_S*(0.0+x[('S', '(8, (5.0, 4.0))')]*5.188487243300213+x[('S', '(8, (4.0, 5.0))')]*4.632700871354016)+beta_S_S_to_S_I*(0.0+x[('S', '(8, (4.0, 5.0))')]*5.420799424506114+x[('S', '(8, (3.0, 6.0))')]*5.953386373114078)-(beta_S_I_to_S_S*x[('S', '(8, (4.0, 5.0))')]*8.82118811465423)-(beta_S_S_to_S_I*x[('S', '(8, (4.0, 5.0))')]*10.374185797620195)
	dt_x[('S', '(8, (5.0, 4.0))')] = 0+(1.5000000000000004*x[('I', '(8, (5.0, 4.0))')])-(52.92417711104616*x[('S', '(8, (5.0, 4.0))')])+beta_S_I_to_S_S*(0.0+x[('S', '(8, (5.0, 4.0))')]*4.952572709697543+x[('S', '(8, (6.0, 3.0))')]*6.632262712511688)+beta_S_S_to_S_I*(0.0+x[('S', '(8, (4.0, 5.0))')]*5.377053476613831+x[('S', '(8, (5.0, 4.0))')]*3.9343517443783735)-(beta_S_I_to_S_S*x[('S', '(8, (5.0, 4.0))')]*10.58483542220923)-(beta_S_S_to_S_I*x[('S', '(8, (5.0, 4.0))')]*8.311405220992205)
	dt_x[('S', '(8, (6.0, 3.0))')] = 0+(1.5000000000000004*x[('I', '(8, (6.0, 3.0))')])-(63.05080079934681*x[('S', '(8, (6.0, 3.0))')])+beta_S_I_to_S_S*(0.0+x[('S', '(8, (7.0, 2.0))')]*7.712047426582349+x[('S', '(8, (6.0, 3.0))')]*5.898112733287013)+beta_S_S_to_S_I*(0.0+x[('S', '(8, (6.0, 3.0))')]*3.2222698924860147+x[('S', '(8, (5.0, 4.0))')]*4.429708501790206)-(beta_S_I_to_S_S*x[('S', '(8, (6.0, 3.0))')]*12.610160159869366)-(beta_S_S_to_S_I*x[('S', '(8, (6.0, 3.0))')]*6.65197839427622)
	dt_x[('S', '(8, (7.0, 2.0))')] = 0+(1.5*x[('I', '(8, (7.0, 2.0))')])-(71.4980015083317*x[('S', '(8, (7.0, 2.0))')])+beta_S_I_to_S_S*(0.0+x[('S', '(8, (7.0, 2.0))')]*7.246645790887043+x[('S', '(8, (8.0, 1.0))')]*8.052954510779296)+beta_S_S_to_S_I*(0.0+x[('S', '(8, (7.0, 2.0))')]*2.5140224863969345+x[('S', '(8, (6.0, 3.0))')]*3.1365961216707814)-(beta_S_I_to_S_S*x[('S', '(8, (7.0, 2.0))')]*14.299600301666342)-(beta_S_S_to_S_I*x[('S', '(8, (7.0, 2.0))')]*4.650618608067716)
	dt_x[('S', '(8, (8.0, 1.0))')] = 0+(1.5000000000000002*x[('I', '(8, (8.0, 1.0))')])-(81.22789670278996*x[('S', '(8, (8.0, 1.0))')])+beta_S_I_to_S_S*(0.0+x[('S', '(8, (9.0, 0.0))')]*9.411277093941816+x[('S', '(8, (8.0, 1.0))')]*7.834302246616174)+beta_S_S_to_S_I*(0.0+x[('S', '(8, (8.0, 1.0))')]*1.5375354522180325+x[('S', '(8, (7.0, 2.0))')]*2.231665656767162)-(beta_S_I_to_S_S*x[('S', '(8, (8.0, 1.0))')]*16.245579340557992)-(beta_S_S_to_S_I*x[('S', '(8, (8.0, 1.0))')]*2.769201108985195)
	dt_x[('S', '(8, (9.0, 0.0))')] = 0+(1.4999999999999996*x[('I', '(8, (9.0, 0.0))')])-(91.85604807455329*x[('S', '(8, (9.0, 0.0))')])+beta_S_I_to_S_S*(0.0+x[('S', '(8, (9.0, 0.0))')]*10.730112339661265)+beta_S_S_to_S_I*(0.0+x[('S', '(8, (8.0, 1.0))')]*0.9999999999999998+x[('S', '(8, (9.0, 0.0))')]*0.6720482064945359)-(beta_S_I_to_S_S*x[('S', '(8, (9.0, 0.0))')]*18.371209614910647)-(beta_S_S_to_S_I*x[('S', '(8, (9.0, 0.0))')]*0.6720482064945359)
	dt_x[('S', '(9, (0.0, 9.0))')] = 0+(1.4999999999999998*x[('I', '(9, (0.0, 9.0))')])-(7.677131258858263*x[('S', '(9, (0.0, 9.0))')])+beta_S_I_to_S_S*(0.0+x[('S', '(9, (1.0, 8.0))')]*0.9999999999999998+x[('S', '(9, (0.0, 9.0))')]*1.5354262517716513)+beta_S_S_to_S_I*(0.0+x[('S', '(9, (0.0, 9.0))')]*25.807667078890848)-(beta_S_I_to_S_S*x[('S', '(9, (0.0, 9.0))')]*1.5354262517716513)-(beta_S_S_to_S_I*x[('S', '(9, (0.0, 9.0))')]*33.76592723897441)
	dt_x[('S', '(9, (1.0, 8.0))')] = 0+(1.4999999999999987*x[('I', '(9, (1.0, 8.0))')])-(26.73493846144291*x[('S', '(9, (1.0, 8.0))')])+beta_S_I_to_S_S*(0.0+x[('S', '(9, (1.0, 8.0))')]*4.220616920238374+x[('S', '(9, (2.0, 7.0))')]*2.1263707720502056)+beta_S_S_to_S_I*(0.0+x[('S', '(9, (0.0, 9.0))')]*8.963951640689727+x[('S', '(9, (1.0, 8.0))')]*22.023984859453183)-(beta_S_I_to_S_S*x[('S', '(9, (1.0, 8.0))')]*5.34698769228858)-(beta_S_S_to_S_I*x[('S', '(9, (1.0, 8.0))')]*29.987936500142908)
	dt_x[('S', '(9, (2.0, 7.0))')] = 0+(1.5*x[('I', '(9, (2.0, 7.0))')])-(44.500833409328344*x[('S', '(9, (2.0, 7.0))')])+beta_S_I_to_S_S*(0.0+x[('S', '(9, (2.0, 7.0))')]*6.741994977512063+x[('S', '(9, (3.0, 6.0))')]*3.1581717043536073)+beta_S_S_to_S_I*(0.0+x[('S', '(9, (1.0, 8.0))')]*8.083056497811581+x[('S', '(9, (2.0, 7.0))')]*19.27401828049455)-(beta_S_I_to_S_S*x[('S', '(9, (2.0, 7.0))')]*8.900166681865677)-(beta_S_S_to_S_I*x[('S', '(9, (2.0, 7.0))')]*26.357074778306135)
	dt_x[('S', '(9, (3.0, 6.0))')] = 0+(1.5000000000000013*x[('I', '(9, (3.0, 6.0))')])-(62.63149110875327*x[('S', '(9, (3.0, 6.0))')])+beta_S_I_to_S_S*(0.0+x[('S', '(9, (3.0, 6.0))')]*9.33612912977624+x[('S', '(9, (4.0, 5.0))')]*4.19016909197442)+beta_S_S_to_S_I*(0.0+x[('S', '(9, (3.0, 6.0))')]*16.861043538046893+x[('S', '(9, (2.0, 7.0))')]*7.154819316783131)-(beta_S_I_to_S_S*x[('S', '(9, (3.0, 6.0))')]*12.526298221750656)-(beta_S_S_to_S_I*x[('S', '(9, (3.0, 6.0))')]*23.015862854830033)
	dt_x[('S', '(9, (4.0, 5.0))')] = 0+(1.5*x[('I', '(9, (4.0, 5.0))')])-(80.2372044285782*x[('S', '(9, (4.0, 5.0))')])+beta_S_I_to_S_S*(0.0+x[('S', '(9, (4.0, 5.0))')]*12.06397108684129+x[('S', '(9, (5.0, 4.0))')]*4.983469798874344)+beta_S_S_to_S_I*(0.0+x[('S', '(9, (4.0, 5.0))')]*14.407910726446161+x[('S', '(9, (3.0, 6.0))')]*5.851204647777423)-(beta_S_I_to_S_S*x[('S', '(9, (4.0, 5.0))')]*16.04744088571564)-(beta_S_S_to_S_I*x[('S', '(9, (4.0, 5.0))')]*19.259115374223597)
	dt_x[('S', '(9, (5.0, 4.0))')] = 0+(1.4999999999999998*x[('I', '(9, (5.0, 4.0))')])-(98.23142385968686*x[('S', '(9, (5.0, 4.0))')])+beta_S_I_to_S_S*(0.0+x[('S', '(9, (5.0, 4.0))')]*14.218029539456621+x[('S', '(9, (6.0, 3.0))')]*6.428255232480757)+beta_S_S_to_S_I*(0.0+x[('S', '(9, (5.0, 4.0))')]*11.471579862327461+x[('S', '(9, (4.0, 5.0))')]*5.284185131227429)-(beta_S_I_to_S_S*x[('S', '(9, (5.0, 4.0))')]*19.646284771937367)-(beta_S_S_to_S_I*x[('S', '(9, (5.0, 4.0))')]*15.755764993554886)
	dt_x[('S', '(9, (6.0, 3.0))')] = 0+(1.5000000000000002*x[('I', '(9, (6.0, 3.0))')])-(115.70878462932666*x[('S', '(9, (6.0, 3.0))')])+beta_S_I_to_S_S*(0.0+x[('S', '(9, (6.0, 3.0))')]*16.81660266315536+x[('S', '(9, (7.0, 2.0))')]*7.32515426270996)+beta_S_S_to_S_I*(0.0+x[('S', '(9, (6.0, 3.0))')]*9.139482206578972+x[('S', '(9, (5.0, 4.0))')]*4.215472296137227)-(beta_S_I_to_S_S*x[('S', '(9, (6.0, 3.0))')]*23.14175692586532)-(beta_S_S_to_S_I*x[('S', '(9, (6.0, 3.0))')]*12.354954502716202)
	dt_x[('S', '(9, (7.0, 2.0))')] = 0+(1.5*x[('I', '(9, (7.0, 2.0))')])-(132.72429383467409*x[('S', '(9, (7.0, 2.0))')])+beta_S_I_to_S_S*(0.0+x[('S', '(9, (7.0, 2.0))')]*19.556181420793735+x[('S', '(9, (8.0, 1.0))')]*7.988677346141084)+beta_S_S_to_S_I*(0.0+x[('S', '(9, (7.0, 2.0))')]*6.69311400699774+x[('S', '(9, (6.0, 3.0))')]*3.0677713515953937)-(beta_S_I_to_S_S*x[('S', '(9, (7.0, 2.0))')]*26.544858766934823)-(beta_S_S_to_S_I*x[('S', '(9, (7.0, 2.0))')]*8.760885358593132)
	dt_x[('S', '(9, (8.0, 1.0))')] = 0+(1.5000000000000007*x[('I', '(9, (8.0, 1.0))')])-(150.496490710522*x[('S', '(9, (8.0, 1.0))')])+beta_S_I_to_S_S*(0.0+x[('S', '(9, (8.0, 1.0))')]*21.93592661073558+x[('S', '(9, (9.0, 0.0))')]*9.163371531368815)+beta_S_S_to_S_I*(0.0+x[('S', '(9, (8.0, 1.0))')]*4.074506195798495+x[('S', '(9, (7.0, 2.0))')]*2.1129888032275708)-(beta_S_I_to_S_S*x[('S', '(9, (8.0, 1.0))')]*30.099298142104388)-(beta_S_S_to_S_I*x[('S', '(9, (8.0, 1.0))')]*5.1874949990260655)
	dt_x[('S', '(9, (9.0, 0.0))')] = 0+(1.4999999999999993*x[('I', '(9, (9.0, 0.0))')])-(169.23255188437173*x[('S', '(9, (9.0, 0.0))')])+beta_S_I_to_S_S*(0.0+x[('S', '(9, (9.0, 0.0))')]*25.613389338463314)+beta_S_S_to_S_I*(0.0+x[('S', '(9, (9.0, 0.0))')]*1.476377208442726+x[('S', '(9, (8.0, 1.0))')]*1.0)-(beta_S_I_to_S_S*x[('S', '(9, (9.0, 0.0))')]*33.84651037687433)-(beta_S_S_to_S_I*x[('S', '(9, (9.0, 0.0))')]*1.4763772084427265)

	for i in range(len(x_flat)):
		dt_x_flat[i]=dt_x[sorted_keys[i]]
	return dt_x_flat

#def odeint_adams(f, init, time_points, integrator = 'lsoda'):
def odeint_adams(f, init, time_points, integrator = 'vode'):  # use vode for a rougher estimate
	def f_ode(t, u):
		return f(u,t)

	from scipy.integrate import ode
	#r = ode(f_ode).set_integrator(integrator,rtol=1e-4, atol=1e-5, with_jacobian=False, method='adams') # use this for a rougher estimate
	r = ode(f_ode).set_integrator(integrator, with_jacobian=False, method='adams')
	r.set_initial_value(init, 0)
	step = 0
	u = []
	t = []
	if time_points[0] == 0.0:
			time_points = time_points[1:]
			u.append(np.array(init))
	T = len(time_points)
	pbar = tqdm(total=T)
	pbar.set_description('ODE progress')
	while r.successful() and step < T:
			r.integrate(time_points[step])
			step += 1
			pbar.update(1)
			u.append(r.y)
			t.append(r.t)
	u = np.array(u)
	pbar.close()
	return u


def solve_odes(write_csv = True):
	try:
		raise ValueError('dont') #fix nameing first
		(sol, time_elapsed) = pickle.load(open(folder+'ame_SIS_73_sol.p', 'rb'))
		print('Found pickled results.')
		return sol, time_elapsed
	except:
		pass

	global init
	start = timer()
	init = np.array(init, dtype = np.double)
	#sol = odeint(f, init, t)
	sol = odeint_adams(f, init, t)
	end = timer()
	time_elapsed = end - start
	if write_csv:
		ode_ids = [str(ode) for ode in sorted_keys]
		np.savetxt(folder+'ame_SIS_73_trajectories_individual.csv', sol, delimiter=';', header='sep=;\n'+';'.join(ode_ids), comments='')

	pickle.dump((sol, time_elapsed), open(folder+'ame_SIS_73_sol.p', "wb" ) )
	return sol, time_elapsed


def plot():

	sol, time_elapsed = solve_odes()

	import seaborn as sns 
	plt.clf()

	results = dict()
	for s in states: results[s] = list()
	for i, system_state in enumerate(sol):
		for key in results:
			results[key].append(0.0)
		for ode_i, ode_value in enumerate(system_state):
			state = sorted_keys[ode_i][0]
			results[state][-1] += ode_value

	cp = sns.color_palette("Set1")
	sns.set_context('paper', font_scale = 2.3, rc={"lines.linewidth": 5, 'xtick.labelsize':20, 'ytick.labelsize':20})
	sns.set_style('white')
	ax = plt.gca()
	cp[0], cp[2] = cp[2], cp[0] # to give SIR model intuitive color

	for i, (state, values) in enumerate(sorted(results.items(), key = lambda x: x[0])):
		ax.plot(t, values, label=state, linewidth = 4, color=cp[i])

	ax.set_xlim([0.0,3.0])
	ax.set_ylim([0.0,1.0])

	sns.despine()
	ax.set(xlabel='Time', ylabel='Fractions')
	plt.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0., title='States') # put legend outside
	plt.tight_layout()
	plt.savefig(folder+'ame_SIS_73_trajectories.pdf', bbox_inches="tight")

	with open(folder+'ame_SIS_73_trajectories.csv', 'w') as f:
		sep=','
		f.write('sep=,\n')
		f.write('time'+sep+sep.join(states)+'\n')
		for i in range(len(results[states[0]])):
			f.write(str(t[i])+sep)
			for state in states:
				s = sep if state != states[-1] else ''
				f.write(str(results[state][i])+s)
			if i != range(len(results[states[0]]))[-1]:
				f.write('\n')

	return results, t, time_elapsed


if __name__ == '__main__':
	plot()
